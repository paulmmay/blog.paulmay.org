<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Steven Klise</title>
 <link href="http://stevenklise.com/feed/" rel="self"/>
 <link href="http://stevenklise.com/"/>
 <updated>2012-02-12T00:28:25-05:00</updated>
 <id>http://stevenklise.com/</id>
 <author>
   <name>Recursive</name>
   <email>mail@stevenklise.com</email>
 </author>

 
 <entry>
   <title>Putting Your Face in a Webpage with Node.js &amp; FaceOSC</title>
   <link href="http://stevenklise.com/2012/02/10/facedom"/>
   <updated>2012-02-10T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2012/02/10/facedom</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;FaceDOM uses Kyle McDonald's &lt;a href=&quot;https://github.com/kylemcdonald/ofxFaceTracker&quot;&gt;ofxFaceTracker&lt;/a&gt; to send the points of a person's face to a web page and move DOM elements into the shape of the face.&lt;/strong&gt;&lt;/p&gt;

&lt;iframe src=&quot;http://player.vimeo.com/video/36563425&quot; width=&quot;772&quot; height=&quot;434&quot; frameborder=&quot;0&quot; webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;


&lt;p&gt;This past week in Kyle's &lt;a href=&quot;http://github.com/kylemcdonald/AppropriatingNewTechnologies&quot;&gt;Appropriating New Technologies&lt;/a&gt; we were asked to do something with face detection. After seeing Greg Borenstein send the Kinect skeleton data to a web browser &lt;a href=&quot;http://urbanhonking.com/ideasfordozens/2011/10/27/streaming-kinect-skeleton-data-to-the-web-with-node-js/&quot;&gt;last fall&lt;/a&gt; I've wanted to experiment with Node.js and sending things to the browser that don't traditionally belong there.&lt;/p&gt;

&lt;p&gt;Also this project is in response to Kyle's &lt;a href=&quot;https://vimeo.com/groups/openframeworks/videos/25958231&quot;&gt;People Staring At Computers&lt;/a&gt;. We stare at our computers a lot and they don't respond to our stares. Mouse clicks and key hits yes, but reading an article on the web is still largely non-interactive.&lt;/p&gt;

&lt;p&gt;Currently FaceDOM is a proof of concept. I plan to add more features and a finer amount of detail and response to facial gestures, such as an open mouth, closed eyes, etc. Another important addition will be dynamically parsing the page, currently the elements chosen to form my face were directly coded with the proper CSS tags.&lt;/p&gt;

&lt;p&gt;The source code is available on Github &lt;a href=&quot;https://github.com/stevenklise/AppropriatingNewTechnologies/tree/master/week2&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>On Being Memorious</title>
   <link href="http://stevenklise.com/2012/01/30/Memory"/>
   <updated>2012-01-30T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2012/01/30/Memory</id>
   <content type="html">&lt;p&gt;The first assignment in &lt;a href=&quot;http://jamesgeorge.org/3dworlds/&quot;&gt;Pixels to Polygons&lt;/a&gt; was to build a space from memory using only Unity's primitive shapes placed and manipulated entirely through scripting.&lt;/p&gt;

&lt;h2&gt;Remembering a Place&lt;/h2&gt;

&lt;p&gt;For my space I chose the view from an orange couch that used to be at the coffee shop from my college town. It was a spot where I spent much of my final two years at Kenyon College while doing homework and hanging out. There was a matching orange chair to the left and then a large south facing window with many trees just outside.&lt;/p&gt;

&lt;h2&gt;New Territory&lt;/h2&gt;

&lt;p&gt;I've spent almost the last year in web programming and the command line, manipulating documents and text. Though my first year at ITP involved a lot of Processing I rarely moved in to 3D environments and when I did, the use of pushing and popping the matrix is different than Unity's use of vectors for positioning.&lt;/p&gt;

&lt;p&gt;The hardest part, and where I spent many hours, was finding out the hard way which primitives are best to use for what purpose. The floor plan of the coffee shop was not a simple rectangle but had two sections butting out with triangular corners. Due to these two triangular corners I decided it would be easiest to build the entire floor out of a series of triangles. This route didn't work to well, it required a lot of lines of code and did not seem efficient. Before figuring out how to best tackle the floor I decided to build the orange chair. After a poor reading of James George's &lt;code&gt;GeometryHelper&lt;/code&gt; class I did not realize that cubes in Unity could be deformed to solids with different sides of different lengths. Without this knowledge I proceeded by building the chair out of a series of planes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/itp/pixelspolygons/20120130-mg-planes.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wow, that was difficult and didn't work well. Finally I figured out the &lt;code&gt;CreateCube&lt;/code&gt; function which made everything much easier. Rotations are hard to achieve with scripting. The command for rotating a camera takes a vector for where to point towards yet the UI gives degrees of rotation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/itp/pixelspolygons/20120130-mg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The final result is very plain and not too lush. My false starts were frustrating but I learned a lot about programming in 3D. Using scripts to individually place and rotate every item is very time consuming and I look forward to using Unity's UI to build the objects and then scripting behaviors. The source code is available on &lt;a href=&quot;https://github.com/stevenklise/MiddleGround&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Reading List from Powerful Ideas</title>
   <link href="http://stevenklise.com/2012/01/05/Powerful-Reading-List"/>
   <updated>2012-01-05T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2012/01/05/Powerful-Reading-List</id>
   <content type="html">&lt;p&gt;Last semester I took a course titled &lt;strong&gt;Powerful Ideas: Useful Tools to Understand the World&lt;/strong&gt;. It was taught by Nancy Hechinger and Alan Kay came in once a month as well as wrote us each week via email.&lt;/p&gt;

&lt;p&gt;Throughout the class many, many books were mentioned. Way more than could be read in one semester, more even than I could manage in a year. This list is a great addendum to Alan Kay's own &lt;a href=&quot;http://www.squeakland.org/resources/books/readingList.jsp&quot;&gt;reading list&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/New-Drawing-Right-Side-Brain/dp/0874774195/ref=sr_1_4?ie=UTF8&amp;amp;qid=1325796152&amp;amp;sr=8-4&quot;&gt;Drawing on the Right Side of the Brain&lt;/a&gt;, Betty Edwards&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Eye-Brain-Richard-L-Gregory/dp/0691048371&quot;&gt;Eye and Brain&lt;/a&gt;, Richard Gregory&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Victorian-Internet-Remarkable-Nineteenth--line/dp/0802716040/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325798092&amp;amp;sr=1-1&quot;&gt;The Victorian Internet&lt;/a&gt;, Tom Standage&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Brief-History-Organization-Civilization-Corporation/dp/0595271324/ref=sr_1_4?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325798126&amp;amp;sr=1-4&quot;&gt;A Brief History of the Organization: From The Dawn of Civilization to Leadership of Today's Corporation&lt;/a&gt;, Lynn Bentley&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Silent-Language-Edward-T-Hall/dp/0385055498/ref=tmm_pap_title_0?ie=UTF8&amp;amp;qid=1325798183&amp;amp;sr=1-1&quot;&gt;The Silent Language&lt;/a&gt;, Edward Hall&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Einsteins-Dreams-Alan-Lightman/dp/140007780X/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325798229&amp;amp;sr=1-1&quot;&gt;Einstein's Dreams&lt;/a&gt;, Alan Lightman&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Mr-Tompkins-Paperback-George-Gamow/dp/0521447712/ref=pd_sim_b_6&quot;&gt;Mr. Tompkins in Paperback&lt;/a&gt;, George Gamow&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/How-Hippies-Saved-Physics-Counterculture/dp/039334231X/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325798404&amp;amp;sr=1-1&quot;&gt;How the Hippies Saved Physics&lt;/a&gt;, David Kaiser&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/McGuffeys-Eclectic-Readers-William-McGuffey/dp/0471294284/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325798481&amp;amp;sr=1-1&quot;&gt;McGuffey's Eclectic Reader&lt;/a&gt;, Williams Holmes McGuffey&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/McGuffeys-Eclectic-Readers-William-McGuffey/dp/0471294284/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325798481&amp;amp;sr=1-1&quot;&gt;Relativity Visualized&lt;/a&gt;, Lewis Carroll Epstein&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://electricalexperimenter.com/&quot;&gt;The Electrical Experimenter&lt;/a&gt;, periodical&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://backissues.com/issue/Scientific-American-September-1966&quot;&gt;Scientific American, September 1966&lt;/a&gt;, periodical, an excerpt &lt;a href=&quot;http://www.scientificamerican.com/article.cfm?id=system-analysis-and-programming-christopher-strachey&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Disappearance-Childhood-Neil-Postman/dp/0679751661/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799231&amp;amp;sr=1-1&quot;&gt;Disappearance of Childhood&lt;/a&gt;, Neil Postman&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Gutenberg-Galaxy-Marshall-McLuhan/dp/144261269X/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799250&amp;amp;sr=1-1&quot;&gt;Gutenberg Galaxy&lt;/a&gt;, Marshall McLuhan&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Secret-Childhood-Maria-Montessori/dp/0345305833/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799279&amp;amp;sr=1-1&quot;&gt;The Secret of Childhood&lt;/a&gt;, Maria Montessori&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Character-Physical-Messenger-Lectures-1964/dp/0262560038/ref=sr_1_4?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799295&amp;amp;sr=1-4&quot;&gt;Character of Physical Law&lt;/a&gt;, Richard Feynman&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Inner-Game-Tennis-Classic-Performance/dp/0679778314/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799316&amp;amp;sr=1-1&quot;&gt;The Inner Game of Tennis&lt;/a&gt;, W. Timothy Gallwey&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Selfish-Gene-Anniversary----Introduction/dp/0199291152/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799329&amp;amp;sr=1-1&quot;&gt;The Selfish Gene&lt;/a&gt;, Richard Dawkins&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Childrens-Machine-Rethinking-School-Computer/dp/0465010636/ref=sr_1_3?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799372&amp;amp;sr=1-3&quot;&gt;The Children's Machine: Rethinking School in the Age of the Computer&lt;/a&gt;, Seymour Papert&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Mindstorms-Children-Computers-Powerful-Ideas/dp/0465046746/ref=sr_1_2?s=books&amp;amp;ie=UTF8&amp;amp;qid=1325799342&amp;amp;sr=1-2&quot;&gt;Mindstorms: Children, Computers, and Powerful Ideas&lt;/a&gt;, Seymour Papert&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>FloorSquare, ITP Winter Show 2011</title>
   <link href="http://stevenklise.com/2011/12/18/floorsquare"/>
   <updated>2011-12-18T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2011/12/18/floorsquare</id>
   <content type="html">&lt;p&gt;I'm presenting Floorsquare at the ITP Winter Show.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/itp/floorsquare_winter_2011.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The project is an interactive directory of the students and faculty currently on the floor at ITP. It's purpose is to give a glimpse at what is going on around the floor as you first enter. What projects are being presented? Who is around offering help in certain subjects.&lt;/p&gt;

&lt;p&gt;Checking in to Floorsquare currently requires an NYU ID card. The app also serves as an open API for other student projects wishing to access student directory information.&lt;/p&gt;

&lt;p&gt;Floorsquare is a group project with Jeremy Scott Diamond, Zach Schwartz, Lily Szajnberg, Noah Crowley, Meghan Hoke, Gabby Levine, Greg Dorsainville &amp;amp; Matt Tennie.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ITPQA, Questions and Answers for the ITP Community</title>
   <link href="http://stevenklise.com/2011/11/20/itpqa"/>
   <updated>2011-11-20T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2011/11/20/itpqa</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;We've started a knowledge base for the ITP community.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/itp/20111120-itpqabeta.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ITP is a two year graduate program nestled somewhere in between the arts and the cutting-edge of technology. We use a few email lists to keep in touch with the community. There's the informal Student list for questions, memes, flamewars, suggestions, announcements. There's the ICM list for help with Processing and other programming questions. And the PhysComp list for physical computing questions. There's also an Alumni list. Four individual email lists all with one main problem, the ability to search back before your time on the list. This is an issue for all the perennial questions like &quot;How do I actually make an LED blink?&quot; and &quot;Where is the best place around NYU to take a nap?&quot; As well as that one former student or faculty member that answered your question years ago but is no longer on the listserve.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&quot;http://www.itpqa.com&quot;&gt;ITPQA&lt;/a&gt;, a Stack Overflow inspired question and answer site for ITP. After just one week of use we've had questions from current students and alumni and answers likewise as well as some faculty offering answers.&lt;/p&gt;

&lt;p&gt;Go ahead, &lt;a href=&quot;http://www.itpqa.com/register&quot;&gt;sign up&lt;/a&gt; for an account and start asking and answering questions. And don't forget to vote up (or down) the questions and answers that are helpful to you. The site works on a system of reputation, reputation created by the other users on the site.&lt;/p&gt;

&lt;h4&gt;The Background&lt;/h4&gt;

&lt;p&gt;The seeds of this project started a year ago when &lt;a href=&quot;http://alexdodge.com/&quot;&gt;Alex Dodge&lt;/a&gt;, &lt;a href=&quot;http://paulmay.org/&quot;&gt;Paul May&lt;/a&gt;, &lt;a href=&quot;http://iamspikemccue.com/&quot;&gt;Spike McCue&lt;/a&gt; and I sat down as doe-eyed first years and came up with an ambitious project to revolutionize the way that ITP students interact and share information on the internet. We came up with a codename and a plan…and then got consumed by our other work.&lt;/p&gt;

&lt;p&gt;Then this year Alex and I returned to our quest, though vastly scaled back. This conversation resulted in Alex building small sign-up sites for &lt;a href=&quot;http://itp.nyu.edu/tno/&quot;&gt;TNO&lt;/a&gt;, &lt;a href=&quot;http://itp.nyu.edu/driveby/&quot;&gt;DriveBys&lt;/a&gt; and &lt;a href=&quot;http://itp.nyu.edu/theoryclub/&quot;&gt;Theory Club&lt;/a&gt;. Sign up and scheduling for these events has been liberated from the inbox as well as an archive for the previous meetings.&lt;/p&gt;

&lt;p&gt;Finally, in the aftermath of a heated discussion on the Student List about the list itself I talked to &lt;a href=&quot;http://benturner.com/&quot;&gt;Ben Turner&lt;/a&gt; and we decided it was time to stop complaining or making plans and to actually put something up.&lt;/p&gt;

&lt;p&gt;We've expanded the team a bit already with some students, including &lt;a href=&quot;http://www.mlmckenna.com/&quot;&gt;Margaret McKenna&lt;/a&gt;, more skilled at PHP than I am.&lt;/p&gt;

&lt;h4&gt;Roadmap&lt;/h4&gt;

&lt;p&gt;Aside from bug fixes the main feature we hope to introduce to ITPQA is integration with the email lists. Questions tagged with &quot;PhysComp&quot; or &quot;ICM&quot; will soon automate emails to those lists. And soon writing an email to the Student list with &quot;[ITPQA]&quot; in the subject line will post that email to the site.&lt;/p&gt;

&lt;h4&gt;The Tech Specs&lt;/h4&gt;

&lt;p&gt;ITPQA is built on &lt;a href=&quot;https://github.com/Datawalke/Coordino&quot;&gt;Coordino&lt;/a&gt; and hosted on &lt;a href=&quot;https://phpfog.com/&quot;&gt;PHP Fog&lt;/a&gt;. The source code is on &lt;a href=&quot;http://github.com/stevenklise/itpqa&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tapper</title>
   <link href="http://stevenklise.com/2011/11/07/tapper"/>
   <updated>2011-11-07T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2011/11/07/tapper</id>
   <content type="html">&lt;iframe src=&quot;http://player.vimeo.com/video/31712426?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;772&quot; height=&quot;434&quot; frameborder=&quot;0&quot; webkitAllowFullScreen allowFullScreen&gt;&lt;/iframe&gt;


&lt;p&gt;Above is a video of the Tapper Sequencer. I made it for the midterm assignment in &lt;a href=&quot;/Musical-Sequence&quot;&gt;Musical Sequence&lt;/a&gt;, it built around an Arduino. I'm happy to say that the Tapper can operate without the aid of a computer and has an 1/8&quot; line-out jack to hook in to whatever sound system you so desire. So the Tapper can be patched in to other effects pedals and amps and stand alone as it's own music maker, though it is very primitive and made of cardboard.&lt;/p&gt;

&lt;p&gt;There are eight steps to the sequence, with the pitch of each set by a potentiometer. The potentiometer is divided invisibly into 12 steps designed so that all the notes are in tune relative to each other. It would be better if each of the 12 steps was demarcated either through using rotary encoders instead of potentiometers or even lines on the case. There is a five-way switch that shifts the notes up and down a total of five octaves.&lt;/p&gt;

&lt;p&gt;The illuminated red button resets the sequence when pressed. So if the 4th note just played and the red button is pressed the next note is the first note. The button above the red one reverses the sequence and while the sequence is running backwards this button is illuminated green. The other two buttons on this pad are currently not working.&lt;/p&gt;

&lt;p&gt;For the final I'm hoping to take this basic design and add a lot more functionality and put the sequencer in a less-cardboard box.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>New Site, Now with Comments and RSS</title>
   <link href="http://stevenklise.com/2011/11/04/comments-and-rss"/>
   <updated>2011-11-04T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2011/11/04/comments-and-rss</id>
   <content type="html">&lt;p&gt;After a summer and fall of slowly rewriting this site in Ruby on Rails I realized that a Rails app is overkill. That and that I actually prefer the command line and text editor to any web form.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's a static site generator written in Ruby. No database. No browser interface. I write my posts in &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; and have a handful of template files. Running Jekyll (&lt;code&gt;$ jekyll&lt;/code&gt;) combines the templates with the posts and generates html files of the site. Very little server load, simple. Easy to update. No bloat or complicated (and largely unneeded) Wordpress upgrades.&lt;/p&gt;

&lt;p&gt;However I've been disappointed with the lack of detailed documentation for setting up Jekyll. I'll write a bit here how I set up comments and an RSS feed and soon I'll write up creating and deploying a site with Jekyll.&lt;/p&gt;

&lt;h2&gt;Comments with Disqus&lt;/h2&gt;

&lt;p&gt;For commenting, without a database, I had to look for a service that could embed in the page and save the comments on an external database. Embeddable commenting is exactly what &lt;a href=&quot;http://disqus.com&quot;&gt;Disqus&lt;/a&gt; does. Getting Disqus on my site was wonderfully easy and straight forward. I found a tutorial by Douglas Creager who explains the whole process on &lt;a href=&quot;http://dcreager.net/2009/08/07/disqus-comments/&quot;&gt;his own Jekyll site&lt;/a&gt;. So I've got Disqus comments, just like over on my &lt;a href=&quot;http://stevenklise.tumblr.com&quot;&gt;Tumblr&lt;/a&gt;, so please use it.&lt;/p&gt;

&lt;h2&gt;Burning an RSS Feed&lt;/h2&gt;

&lt;p&gt;Even though Google Reader has just crippled itself I still prefer to digest the internet through RSS feeds. With Jekyll's templating building a feed was also easy and took 5 minutes to set up. Five minutes if you remove the time spent chasing character encoding issues from copying posts from Wordpress. I found a &lt;a href=&quot;http://recursive-design.com/blog/2010/09/14/integrating-jekyll-with-feedburner/&quot;&gt;tutorial&lt;/a&gt; from Recursive Design to create a feed and then the one step process of getting that feed hosted on Feedburner.&lt;/p&gt;

&lt;p&gt;Straightforward until the author started talking about nginx rewrites. There is some code offered to make a rewrite but no indication where that code goes. If you're familiar with nginx you probably knew exactly how to do this, but I don't. This site is hosted on Heroku so a rewrite would not be able to be applied directly to the server and would have to be app specific. Jekyll on Heroku requires the &lt;code&gt;rack-jekyll&lt;/code&gt; gem (&lt;a href=&quot;https://github.com/bry4n/rack-jekyll&quot;&gt;documentation on Github&lt;/a&gt;). Running on Rack gives quick access to rewrites in just four lines. Open up &lt;code&gt;config.ru&lt;/code&gt; (a full tutorial on Jekyll is coming soon, on this blog) and add the following lines:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1340812.js?file=config.ru&quot;&gt;&lt;/script&gt;


&lt;p&gt;You'll also need to include &lt;code&gt;rack/rewrite&lt;/code&gt; in your &lt;code&gt;Gemfile&lt;/code&gt; or &lt;code&gt;.gems&lt;/code&gt;. I went with bundler and a &lt;code&gt;Gemfile&lt;/code&gt; which you can see below&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1340812.js?file=Gemfile&quot;&gt;&lt;/script&gt;


&lt;p&gt;So far, blogging with Jekyll has been great.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Final Proposal for Musical Sequence</title>
   <link href="http://stevenklise.com/2011/11/03/sequencer-final-proposal"/>
   <updated>2011-11-03T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2011/11/03/sequencer-final-proposal</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;A quick visual tour of what I have planned for my final project in Musical Sequence&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/IMG_0022.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/IMG_0023.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/IMG_0024.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/IMG_0025.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/IMG_0026.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/IMG_0027.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sequencer Teaser</title>
   <link href="http://stevenklise.com/2011/10/31/sequencer-teaser"/>
   <updated>2011-10-31T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2011/10/31/sequencer-teaser</id>
   <content type="html">&lt;p&gt;The midterm assignment for &lt;a href=&quot;/Musical-Sequence&quot;&gt;Musical Sequence&lt;/a&gt; was to build a sequencer using an Arduino. Here are two images of what I built. It's an eight step sequencer currently with a reset button and a reverse mode. No computer is necessary to operate, and there is a 1/8&quot; audio out jack in the back of the box. Video and a more detailed write up are coming.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/midterm-sequencer-outside.jpg&quot; alt=&quot;Outside Sequencer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://sklise.s3.amazonaws.com/musical-sequence/midterm-sequencer-inside.jpg&quot; alt=&quot;Inside Sequencer&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>My First Daemon</title>
   <link href="http://stevenklise.com/2011/10/02/my-first-daemon"/>
   <updated>2011-10-02T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2011/10/02/my-first-daemon</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Playing a multiplayer game through Telnet with Sinatra &amp;amp; a daemon.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For our first 'make something' assignment in &lt;a href=&quot;/Understanding-Networks&quot;&gt;Understanding Networks&lt;/a&gt; we were tasked with creating a client for a Telnet server to play a game &lt;a href=&quot;https://github.com/tigoe/MakingThingsTalk2/tree/master/chapter2/project2/MonskiPong&quot;&gt;similar to pong&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The class is taught in PHP, a fact which has convinced me to do (and someday document how to do) everything in Ruby. Of course Telnet is a persistent connection and HTTP is stateless. Trying to maintain a Telnet connection strictly through a browser is then not possible without diving into the world of sockets and streaming.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1257779.js?file=daemon.rb&quot;&gt;&lt;/script&gt;


&lt;p&gt;To maintain the browser as the interface but not have &lt;code&gt;telnet&lt;/code&gt; happening in the HTTP requests I wrote, with the help of resident Greg Borenstein, a daemon. A &lt;a href=&quot;http://en.wikipedia.org/wiki/Daemon_(computing&quot;&gt;daemon&lt;/a&gt;) is a script that runs in the background, constantly. In my case the daemon listens to the database for a new Task. When it finds a new Task it sends the contents of the Task to the Telnet connection and then marks the Task as completed.&lt;/p&gt;

&lt;p&gt;The Task is a DataMapper object.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1257779.js?file=Task.rb&quot;&gt;&lt;/script&gt;


&lt;p&gt;The user clicks an arrow or connection button in the browser and a Task object is created with that command and designated as not being done. In the end this worked well, however the latency between browser to database to daemon to telnet server was only manageable running the app locally.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stevenklise/BallDropClient&quot;&gt;Source on Github&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Clumpers</title>
   <link href="http://stevenklise.com/2011/05/17/Clumpers"/>
   <updated>2011-05-17T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2011/05/17/Clumpers</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Clumpers is an experiment of combining flocking behaviors with cellular automaton like rules without discrete boundaries between organisms&lt;/strong&gt;&lt;/p&gt;

&lt;iframe src=&quot;http://player.vimeo.com/video/23694777?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;772&quot; height=&quot;433&quot; frameborder=&quot;0&quot; webkitAllowFullScreen allowFullScreen&gt;&lt;/iframe&gt;


&lt;p&gt;My intention with Clumpers was to see what would happen when a cellular automaton was moved from a discrete grid to a continuous plane and allow the organisms to move around. What emergent qualities would result by combining two complex systems?&lt;/p&gt;

&lt;p&gt;The program start with a few hundred organisms spawning at random throughout the screen. Each individual organism then looks for the average position of all the organisms, as well as the average heading of the organisms within a smaller neighborhood. These two values are scaled and combined to a desired velocity. A small random vector is summed to the velocities each frame to encourage movement.&lt;/p&gt;

&lt;p&gt;At the same time as these steering behaviors, each organism is counting the number of neighbors it has. IF that number is above a &quot;crowded&quot; threshold or below a &quot;loneliness&quot; threshold the organism dies. Upon death the organism leaves behind a ripple and is reborn at a random location on screen. My original intention was to have organisms born in locations based on the density of living organisms, however without clear boundaries between organisms it proved difficult to get a global density map.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Last Accessed / Last Modified</title>
   <link href="http://stevenklise.com/2011/05/09/Last-Accessed-Last-Modified"/>
   <updated>2011-05-09T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2011/05/09/Last-Accessed-Last-Modified</id>
   <content type="html">&lt;script src=&quot;https://gist.github.com/1346759.js?file=Last%20Accessed%20Last%20Modified.txt&quot;&gt;&lt;/script&gt;


&lt;p&gt;The specifications for the final in Reading &amp;amp; Writing Electronic Text were to perform a text generated by a Python program. My previous homeworks are not well suited to reading aloud, on these I focused mostly on structure and form and not readability.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Last Accessed / Last Modified&lt;/em&gt; is an attempt at having a computer communicate its ability to perceive its surroundings with a human reader through a poem. So what is a poem to a computer? What methods in Python are 'poetic'? In my mind it's recursion and the &lt;code&gt;random()&lt;/code&gt; function. In recursion there is refrain, the block of code runs over and over, but also there is self-reference, each time a recursive method runs its input is the previous run's output. As for randomness, every action a computer performs is specified by a human, thus the only real choice a computer has is what number to spit out when prompted with &lt;code&gt;random()&lt;/code&gt;. Neither of these two methods make a computer truly expressive but until a computer becomes self aware I think these are good approximations.&lt;/p&gt;

&lt;p&gt;With those methods chosen, what will the program write? Information about the Python file itself as well as the current state of the computer seemed an obvious first step. The poem begins with an introduction, chosen from a context free grammar like process though the words in use are chosen to always result in a similar attitude of greeting. The computer will tell the reader when the file was last accessed and how long the computer has been awake, as well as a 'guess' of sorts to how long the poem might be.&lt;/p&gt;

&lt;p&gt;After the introduction, the computer chooses a candidate zip code from a text file and checks the candidate against a predefined zip code of the current location. If the two zips do not match a comment on the current weather at the proposed zip code is printed and the function runs again and again until the correct zip code is chosen. The time of sunset at the current location ends the poem.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Last Accessed / Last Modified&lt;/em&gt; is all artifice. It is human written code crafted to create output to illicit a computer's poetics. That it is impossible to have a computer write its own poetry is a logical conclusion though in my mind does not detract from the poems this program creates.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stevenklise/LastAccessedLastModified&quot;&gt;Download on Github&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Get The Goods</title>
   <link href="http://stevenklise.com/2010/11/26/Get-The-Goods"/>
   <updated>2010-11-26T00:00:00-05:00</updated>
   <id>http://stevenklise.com/2010/11/26/Get-The-Goods</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;A three week project in Comm Lab with Nick Santaniello and Andi Cheung. Influenced greatly by Bullitt, The French Connection, and all other 70s cop capers. All three of us spent time behind and in front of the camera which is a Canon 5D Mark II which has revived my itch for expensive cameras.&lt;/strong&gt;&lt;/p&gt;

&lt;iframe width=&quot;771&quot; height=&quot;392&quot; src=&quot;http://www.youtube.com/embed/D16Ip0MMQDU?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

</content>
 </entry>
 
 <entry>
   <title>Stupid Pet Trick</title>
   <link href="http://stevenklise.com/2010/10/16/Stupid-Pet-Trick"/>
   <updated>2010-10-16T00:00:00-04:00</updated>
   <id>http://stevenklise.com/2010/10/16/Stupid-Pet-Trick</id>
   <content type="html">&lt;iframe src=&quot;http://player.vimeo.com/video/15904819?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitAllowFullScreen allowFullScreen&gt;&lt;/iframe&gt;


&lt;p&gt;This assignment for PComp was to create a “stupid pet trick” by taking all the skills we have learned thus far in the labs and create something amusing or engaging. Continuing the theme of the ball sink game I made in Procressing I decided to take the same primitive game and add sensors, a servo and a score board.&lt;/p&gt;

&lt;p&gt;The player tilts the board rolling the ball into the hole which decreases the readings on a photocell to below a certain threshold, and then the Arduino turns a servo 90 degrees to knock the ball out of the hole. Upon each score the 7-segment LED updates. A reset button was added in to restart the score board without needing to hit the main reset button built in to the Arduino.&lt;/p&gt;

&lt;p&gt;I built the circuit entirely on a breadboard and wrote the code before starting on fabrication to be sure that if errors happened they could be isolated to the building process. And almost immediately the scroll saw proved unwieldy for cutting a perfect circle in the masonite. As a result the ping pong ball doesn’t always block the proper amount of light to trigger the photocell. If I were to make a Version2 of this I’d make the ball conductive and have to leads along the edge of the hole to prevent false triggers by low ambient light or no triggers from too much. I would also exchange the servo with a solenoid as currently the ball always gets pushed in the same direction but a solenoid would pop the ball straight up adding a variety to which direction it would go on a reset.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sklise.s3.amazonaws.com/itp/pcomp_pettrick_code.zip&quot;&gt;Download Arduino Code&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
</feed>