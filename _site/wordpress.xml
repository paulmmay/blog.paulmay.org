<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.1" created="2011-11-05 23:43" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>ITPlog</title>
	<link>http://l/~sklise/stevenklise.com/itp</link>
	<description></description>
	<pubDate>Sat, 05 Nov 2011 23:43:10 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://l/~sklise/stevenklise.com/itp</wp:base_site_url>
	<wp:base_blog_url>http://l/~sklise/stevenklise.com/itp</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>sk</wp:author_login><wp:author_email>sklise@nyu.edu</wp:author_email><wp:author_display_name><![CDATA[sk]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>f2010</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[FALL 2010]]></wp:cat_name><wp:category_description><![CDATA[Classes from the Fall 2010 semester.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>32</wp:term_id><wp:category_nicename>f2011</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[FALL 2011]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>icm</wp:category_nicename><wp:category_parent>f2010</wp:category_parent><wp:cat_name><![CDATA[ICM]]></wp:cat_name><wp:category_description><![CDATA[Fall 2010 <a href="http://itp.nyu.edu/varwiki/Syllabus/ICM-Wang-F10">Introduction to Computational Media with Che-Wei Wang</a>]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>misc</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Misc.]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>33</wp:term_id><wp:category_nicename>ms</wp:category_nicename><wp:category_parent>f2011</wp:category_parent><wp:cat_name><![CDATA[Musical Sequence]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>pcomp</wp:category_nicename><wp:category_parent>f2010</wp:category_parent><wp:cat_name><![CDATA[PComp]]></wp:cat_name><wp:category_description><![CDATA[Fall 2010 <a href="http://itp.nyu.edu/physcomp/Intro/HomePage">Introduction to Physical Computing with Rory Nugent</a>]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>34</wp:term_id><wp:category_nicename>pi</wp:category_nicename><wp:category_parent>f2011</wp:category_parent><wp:cat_name><![CDATA[Powerful Ideas]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>s2011</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[SPRING 2011]]></wp:cat_name><wp:category_description><![CDATA[My second semester at <a href="http://itp.nyu.edu/itp">ITP</a>, out of the intro classes and into deeper subjects.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>31</wp:term_id><wp:category_nicename>s2010</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[SUMMER 2010]]></wp:cat_name><wp:category_description><![CDATA[Getting a head start on grad school. Getting to know New York.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>35</wp:term_id><wp:category_nicename>un</wp:category_nicename><wp:category_parent>f2011</wp:category_parent><wp:cat_name><![CDATA[Understanding Networks]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>bg</wp:category_nicename><wp:category_parent>s2011</wp:category_parent><wp:cat_name><![CDATA[Big Games]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>commlab</wp:category_nicename><wp:category_parent>f2010</wp:category_parent><wp:cat_name><![CDATA[CommLab]]></wp:cat_name><wp:category_description><![CDATA[Fall 2010 <a href="http://itp.nyu.edu/~mp51/commlab/">Communications Lab with Marianne Petit</a>]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>30</wp:term_id><wp:category_nicename>dataart</wp:category_nicename><wp:category_parent>s2010</wp:category_parent><wp:cat_name><![CDATA[Data&gt;Art Transformations]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>dir</wp:category_nicename><wp:category_parent>s2011</wp:category_parent><wp:cat_name><![CDATA[Digital Imaging: Reset]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>noc</wp:category_nicename><wp:category_parent>s2011</wp:category_parent><wp:cat_name><![CDATA[Nature of Code]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>rwet</wp:category_nicename><wp:category_parent>s2011</wp:category_parent><wp:cat_name><![CDATA[Reading &amp; Writing Electronic Text]]></wp:cat_name></wp:category>

	<generator>http://wordpress.org/?v=3.1</generator>

	<item>
		<title>Sensor Walk</title>
		<link>http://l/~sklise/stevenklise.com/itp/sensor-walk/</link>
		<pubDate>Wed, 15 Sep 2010 18:31:50 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[Sensors Encountered:
<ul>
	<li>Seven exterior security cameras.</li>
	<li>Light sensor atop a street light.</li>
	<li>Motion sensor above automatic doors at Key Food.</li>
	<li>Thermometers in the refrigeration units.</li>
	<li>Barcode scanner at self-checkout.</li>
	<li>Touch screen self-checkout.</li>
	<li>Scale under bagging area.</li>
	<li>Magnetic strip credit card reader.</li>
</ul>
Waking up without only expired milk for breakfast was a huge bummer.  So on my walk to and through the store I kept my mind on sensors and not on my hunger pains.  There were some sensors that I actively interacted with and some only passively if at all.  There were seven security cameras on the two blocks between my apartment and the store and though I did not use them my passing was, presumably, recorded on their sensors which most likely were digital.  Also on top of all the street lights are sensors responding to ambient light determining when the lamp should be switched on.

When I got to the store the motion sensor on the door let me in and as I went to the milk noticed the thermometers in all of the refrigerator units keeping track of fluctuations in temperature and telling the cooling unit how to modify output.  Then at checkout I used the self checkout lane which has tons of sensors from barcode scanners to the touch screen sensor of the console to the weight sensor ensuring that every item I scanned made it to the bagging area and then finally the credit card scanner with its magnetic sensor.

On my way out I once again passed a motion sensor to open the door and the seven security cameras.  I went upstairs poured a bowl of cereal and turned on my stereo with the remote utilizing the infrared sensor.

<img src="http://stevenklise.com/itp/2010-fall/pcomp_hw_1_pg1026.jpg" alt=""/>
<img src="http://stevenklise.com/itp/2010-fall/pcomp_hw_1_pg1031.jpg" alt=""/>
<img src="http://stevenklise.com/itp/2010-fall/pcomp_hw_1_pg1034.jpg" alt=""/>
<img src="http://stevenklise.com/itp/2010-fall/pcomp_hw_1_pg1036.jpg" alt=""/>
<img src="http://stevenklise.com/itp/2010-fall/pcomp_hw_1_pg1021.jpg" alt=""/>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2010-09-15 18:31:50</wp:post_date>
		<wp:post_date_gmt>2010-09-15 18:31:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sensor-walk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[261643696]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Response to E.M. Forster&#039;s &quot;The Machine Stops&quot;</title>
		<link>http://l/~sklise/stevenklise.com/itp/response-to-e-m-forsters-the-machine-stops/</link>
		<pubDate>Thu, 16 Sep 2010 19:40:03 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[E.M. Forster's short story "The Machine Stops" was written 100 years ago before the internet social networks personal computing and even television.  Yet in the story there are many advanced technologies that have been invented since in varying forms.  Aside from envisioning technologies like video-phones Forster also seems to have anticipated the adverse effects of such advances.

In his imagined future every person has their own room where most of their life occurs.  Interpersonal communication is conducted mostly through a videophone like interface in each person’s room.  The videophone has seems to be always on and always accessible to others, steps must be taken to prevent being contacted by others.  This is a harbinger of systems similar to Google Talk which connects one to all email contacts and is set to on by default.  We see how this is distracting and for Vashti to conduct a focused conversation she switches in to isolation mode.  Before the internet, ignoring contact attempts from others was a passive system, not answering the phone when it rang, not opening or responding to a letter.  In the future, and indeed now, it requires effort to not be contacted.  To me it is startling that this result could have been foreseen at the beginning of the 1900s.

Indeed, the ability to be converse in real time with others without the requirement of physical proximity allows Vashti to have more friends than was customary at the time of writing when even traveling from town to town was a considerable effort.  Forster notes in response to Vashti knowing several thousand people “in certain directions human intercourse had advanced enormously” (pg 1).  The wonder of the videophone is contrasted in this story with the lack of “direct experience” (pg 6-7), and the resulting physical isolation that has occurred, everyone stays in their own hexagonal cell, imprisoned not by force or requirement but from lacking a need to leave.  Echoes of this can be seen in Facebook and other social networks, it is possible to have thousands of ‘friends’ or followers without or with limited physical interaction.

Another notion touched only briefly in the story is in the sentence “Something "good enough" had long since been accepted by our race” (pg 3).  The videophone renders faces just enough to be recognizable but does not match the fidelity of real life but this is deemed unimportant, the existence of the technology is good enough, being perfected has become unimportant.  This again is echoed in the current day.  Twitter with its 140 character maximum has caught the attention of the public to converse and interact despite being limited to 140 characters.  Since Twitter was started advances have made the 140 character cap no longer a technical requirement but yet this limitation remains because it is ‘good enough’ and for the most part users are content and don’t yearn for a better/longer tweet.

In the second part of the story we see the undoing of the machine.  It begins to fall apart and the no one knows how to repair it when the automatic repair breaks.  As technologies have become more and more advanced their workings are more obfuscated to the general population.  The burden of repair of vital systems falling in to only a few hands portends if those hands fail or disappear then the whole Machine will fall apart and no one will know how to fix it.  The very same specialization that makes complicated machines like computers possible also limits the ability of any one person to fix a problem.

A lot of “The Machine Stops” revolves around the way that technology makes life easier though at the same time removes personal control and creates a distance between people physically though virtually brings us together.  Even before many of these technologies existed Forster was already predicting and warning of the downsides of complete reliance on advanced technology.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2010-09-16 19:40:03</wp:post_date>
		<wp:post_date_gmt>2010-09-16 19:40:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>response-to-e-m-forsters-the-machine-stops</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[282527098]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ICM: Homework 01</title>
		<link>http://l/~sklise/stevenklise.com/itp/icm-homework-01/</link>
		<pubDate>Mon, 20 Sep 2010 01:49:31 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li><a href="http://stevenklise.com/itp/2010-fall/icm_hw01_halloween/">Homework01 - Halloween</a></li>
	<li><a href="http://stevenklise.com/itp/2010-fall/icm_hw01_polaroid/">Homework01 - Polaroid</a></li>
	<li><a href="http://stevenklise.com/itp/2010-fall/icm_hw01_mistakes/">Homework01 - Mistakes</a></li>
</ul>
The first homework assignment for Introduction to Computational Media (ICM) was to make a sketch using only primitive 2D shapes.  Bending that a little I took a jpg and made a grid of circles consisting of the color value of every 10th pixel (<em>figs.1-2</em>).  So for a 400x400 pixel jpg the result is a 40x40 grid of circles.  On top of that I made a finer grid of every 2nd pixel.  As one moves the mouse around in the window circles with a diameter of 4 pixels are drawn at positions on this grid within a 40x40 square of the mouse pointer.  The idea is to have a blurry image and with the mouse be able to focus in on certain areas of the image which is supposed to be reminiscent to focusing a camera though the experience is not the same as the source is a flat image and not 3d space with depth.

Though the jpg is rendered in the screen during the setup() function the first line of the draw() function is a black background and so the jpg is not used directly in the final display.

---

I did start on a sketch that was supposed to draw a series of pine trees on the screen but when mis-remembering of the rect() syntax yielded strange shapes instead of an error I went with it (<em>fig.3</em>).

<img src="http://stevenklise.com/itp/2010-fall/icm_hw01_halloween.png" alt="" />
<img src="http://stevenklise.com/itp/2010-fall/icm_hw01_pola.png" alt="" />
<img src="http://stevenklise.com/itp/2010-fall/icm_hw01_mistakes.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2010-09-20 01:49:31</wp:post_date>
		<wp:post_date_gmt>2010-09-20 01:49:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>icm-homework-01</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sudden Motion Ball Sink v1</title>
		<link>http://l/~sklise/stevenklise.com/itp/sudden-motion-ball-sink-v1/</link>
		<pubDate>Wed, 22 Sep 2010 21:16:26 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[ICM Homework 02: Version 1.

This program uses the <a href="http://www.shiffman.net/p5/sms/">Sudden Motion Sensor Library</a> to read from the tilt sensor in Apple laptops to control a 'ball' that is, a circle around the screen.  Pressing the space bar resets the ball to a random position on the screen.  Updates to follow include multiple balls and multiple holes and improved physics.

Download the <a href="http://stevenklise.com/itp/2010-fall/icm_hw02_ballsink_v1.zip">source</a>.

<iframe src="http://player.vimeo.com/video/15201079?byline=0&amp;portrait=0" width="561" height="421" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2010-09-22 21:16:26</wp:post_date>
		<wp:post_date_gmt>2010-09-22 21:16:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sudden-motion-ball-sink-v1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[215848709]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Sudden Motion Ball Sink v2]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/sudden-motion-ball-sink-v2/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2010-09-27 03:55:56</wp:comment_date>
			<wp:comment_date_gmt>2010-09-27 03:55:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] updated my Sudden Motion Ball Sink program and I&#8217;m calling it Version 2.  The [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fantasy Device: Reactive Earplugs</title>
		<link>http://l/~sklise/stevenklise.com/itp/fantasy-device-reactive-earplugs/</link>
		<pubDate>Wed, 22 Sep 2010 22:16:01 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[The Reactive Earplug is a set-it-and-forget-it ear plug.  Currently a flat disc with microphone, audio processor and mechanical workings, the wearer inserts the Reactive Earplug into the ear canal just like a normal earplug but then the 'magic' happens.  This product detects ambient noise and adjusts the sound dampening threshold accordingly.  For instance if you are in a relatively empty and quiet room the Reactive Earplug would give little to no resistance but if the volume in the room increases the earplugs will adjust their density to prevent the perceived decibels from rising and thus on the fly protecting the wearer's ears from damage.

This device is useful for the user who must walk past a construction site on a daily basis as the noise from a nearby jackhammer would instantly trigger the device to increase sound dampening.  No more need to plug your ears with your fingers.

<img src="http://stevenklise.com/itp/2010-fall/pcomp_hw1_fantasydevice.png"/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2010-09-22 22:16:01</wp:post_date>
		<wp:post_date_gmt>2010-09-22 22:16:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fantasy-device-reactive-earplugs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[294542036]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sudden Motion Ball Sink v2</title>
		<link>http://l/~sklise/stevenklise.com/itp/sudden-motion-ball-sink-v2/</link>
		<pubDate>Mon, 27 Sep 2010 03:55:50 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[I've updated my <a href="http://stevenklise.com/itp/sudden-motion-ball-sink-v1/">Sudden Motion Ball Sink</a> program and I'm calling it Version 2.  The changelog:
<ul>
	<li>Increased window size.</li>
	<li>"Glare" added to ball.</li>
	<li>Score system and additional ring of holes.</li>
	<li>Window boundaries added.</li>
	<li>Improved ball movement.</li>
</ul>
Once again, due to the use of the SMS library this program is not embeddable, so a Java application and source code are available at this <a href="http://stevenklise.com/itp/2010-fall/icm_hw02_ballsink_v2.zip">link</a>.

<img src="http://stevenklise.com/itp/2010-fall/icm_hw02_v2.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2010-09-27 03:55:50</wp:post_date>
		<wp:post_date_gmt>2010-09-27 03:55:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sudden-motion-ball-sink-v2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[215848713]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Stupid Pet Trick]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/stupid-pet-trick/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2010-10-16 20:53:29</wp:comment_date>
			<wp:comment_date_gmt>2010-10-16 20:53:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] learned thus far in the labs and create something amusing or engaging. Continuing the theme of the ball sink game I made in Procressing I decided to take the same primitive game and add sensors, a servo and a [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Artemis &amp; The Three Couches</title>
		<link>http://l/~sklise/stevenklise.com/itp/artemis-the-three-couches/</link>
		<pubDate>Mon, 27 Sep 2010 04:18:59 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[<iframe src="http://player.vimeo.com/video/15289592?byline=0&amp;portrait=0" width="561" height="421" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2010-09-27 04:18:59</wp:post_date>
		<wp:post_date_gmt>2010-09-27 04:18:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>artemis-the-three-couches</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Response to Walter Benjamin&#039;s &quot;The Work of Art In The Age of Mechanical Reproduction&quot;</title>
		<link>http://l/~sklise/stevenklise.com/itp/response-to-walter-benjamins-the-work-of-art-in-the-age-of-mechanical-reproduction/</link>
		<pubDate>Mon, 27 Sep 2010 05:28:02 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[Though the title of this article refers to art in general the focus seems to be mostly on film and whether or not it can be considered art and if so what that means for 'art' as a whole.  Benjamin's writing is plagued with pronouns with unclear references.  On top of being unclear with pronouns, Benjamin makes many claims throughout which are simply stated and then not defended or supported or illustrated, for instance he claims to know the motive behind prehistoric cave paintings when by being from prehistory the exact reason or audience cannot be known.

Many of Benjamin's comparisons and examples are flawed.  He purports that the importance of cave paintings was that the work existed and not whether or not it was viewed when the only record of that time exists in the cave paintings and so it is impossible to know who the intended audience was—spirits or other humans—and as an illustrative example it is telling that the best Benjamin can do to support his claim is to cite ancient history and nothing since then.  He does mention statues viewable only to priests and sculptures not viewable at ground level mistaking the intended audience for no audience at all.  He further relates the separation of art from ritual with a change in scale, from immobile sculptures to busts and from wall paintings to paintings on canvas.  Claiming that the ability to create art that can be moved only arose by removing the ritual aspect of art which is ridiculous to think.  Claiming that painting is less ritualistic than a mosaic or fresco merely by being a painting ignores the motivation behind each individual piece and ignores the possibility that painting on mobile surfaces was merely a technological advancement and not a loss of ritual.

When attempting to describe the different reactions people have to art that is authentic versus mechanically reproduced Benjamin compares a Picasso painting to a Chaplin movie.  The idea of comparing an abstract artist to a comic actor is a problem.  How can the reaction of an audience be reasonably made between Guernica and The Tramp?  The subject matter alone would cause a change in reaction no matter the difference in media.

This article is muddled and oddly has an epilogue which instead of wrapping up the piece introduces a discussion of war and politics which was not hinted at during the body of the 'argument.'  Benjamin claims that there is something that is missing in film as an art form, and claims that because there is something missing it is evidence that something is missing.  I feel like what is missing is a cohesive argument, though maybe I just didn't understand the whole paper.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2010-09-27 05:28:02</wp:post_date>
		<wp:post_date_gmt>2010-09-27 05:28:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>response-to-walter-benjamins-the-work-of-art-in-the-age-of-mechanical-reproduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[270959197]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Inverse Blue Screen</title>
		<link>http://l/~sklise/stevenklise.com/itp/inverse-blue-screen/</link>
		<pubDate>Mon, 04 Oct 2010 02:40:44 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[It would have been easier to do this with a video editing program, determine the background and redraw the foreground as a solid color, but what's the fun in that?  Using the <a href="http://ubaa.net/shared/processing/opencv/">OpenCV</a> library the background is identified (on user prompt) after which any pixel read by the camera different from the background is displayed as a blue pixel.  The end goal is to draw only the outlines of people/things passing through the frame but the necessary logic/programming to identify the proper areas as well as getting the lighting correct are tasks for another assignment.

Download the <a href="http://stevenklise.com/itp/2010-fall/icm_hw03_ghosts.zip">source</a>.

<iframe src="http://player.vimeo.com/video/15517618?byline=0&amp;portrait=0" width="561" height="421" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2010-10-04 02:40:44</wp:post_date>
		<wp:post_date_gmt>2010-10-04 02:40:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>inverse-blue-screen</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting a Slice!</title>
		<link>http://l/~sklise/stevenklise.com/itp/getting-a-slice/</link>
		<pubDate>Mon, 04 Oct 2010 02:31:30 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[Comic for Comm Lab, made with Gabby Levine.

<img src="http://stevenklise.com/itp/2010-fall/comm_gettingaslice.png" alt="" class="fullwidth" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2010-10-04 02:31:30</wp:post_date>
		<wp:post_date_gmt>2010-10-04 02:31:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-a-slice</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Movie:Storyboards</title>
		<link>http://l/~sklise/stevenklise.com/itp/?p=88</link>
		<pubDate>Mon, 08 Nov 2010 17:31:54 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://stevenklise.com/itp/2010-fall/storyboards/stevenickandi001sm.jpg" alt="" class="fullwidth"/>
<img src="http://stevenklise.com/itp/2010-fall/storyboards/stevenickandi002sm.jpg" alt="" class="fullwidth"/>
<img src="http://stevenklise.com/itp/2010-fall/storyboards/stevenickandi003sm.jpg" alt="" class="fullwidth"/>
<img src="http://stevenklise.com/itp/2010-fall/storyboards/stevenickandi005sm.jpg" alt="" class="fullwidth"/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2010-11-08 17:31:54</wp:post_date>
		<wp:post_date_gmt>2010-11-08 17:31:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moviestoryboards</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cryware</title>
		<link>http://l/~sklise/stevenklise.com/itp/?p=134</link>
		<pubDate>Thu, 16 Dec 2010 23:17:00 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=134</guid>
		<description></description>
		<content:encoded><![CDATA[- The notion - Looked for flexible materials - Switch designs - Materials applied and tested - A quest for conductive paint - Discovering copper tape - XBee setup - The response - Tested -

<h2>An early materials test</h2>
<img class="fullwidth" src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-1.jpg" />

<h2>Mockup of switch design, proof of fit, connection</h2>
<img class="fullwidth" src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-3.jpg" />

<h2>Conductive Paint: The Chosen One that went unchosen</h2>
<video src="http://stevenklise.com/itp/2010-fall/cryware/MVI_0101.mp4" width="640" height="480" controls></video>

<h2>Early installation concept: Cry a tear, go back in time</h2>
<img class="fullwidth" src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-2.jpg" />

<h2>Left to right, each iteration of the switch: copper wire, conductive paint, embedded copper wire, copper tape</h2>
<img class="fullwidth" src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-4.jpg" />

<h2>First working wiring of switch and XBees</h2>
<img class="fullwidth" src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-5.jpg" />

<video src="http://stevenklise.com/itp/2010-fall/cryware/MVI_0114.mp4" width="640" height="480" controls></video>

By the time we had the switch working, there was not enough time to read through the entire <a href="http://www.sparkfun.com/datasheets/Wireless/Zigbee/XBee-Datasheet.pdf">XBee manual</a> to set up the XBee's digital input and free it from the Arduino.  Hopefully to be completed soon. 

<h2>Ideal setup, no Arduino and smaller battery</h2>
<img class="fullwidth" src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-6.jpg" />

<h2>Closeup of ideal setup</h2>
<img class="fullwidth"  src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-7.jpg" />

<h2>The current wiring</h2>
<img class="fullwidth"  src="http://stevenklise.com/itp/2010-fall/cryware/Cryware-8.jpg" />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date>2010-12-16 23:17:00</wp:post_date>
		<wp:post_date_gmt>2010-12-16 23:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cryware</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://stevenklise.com/itp/2010-fall/cryware/MVI_0101.mp4
43740118
video/mp4
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://stevenklise.com/itp/2010-fall/cryware/MVI_0114.mp4
22614781
video/mp4
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Why This And Not That?&quot;</title>
		<link>http://l/~sklise/stevenklise.com/itp/why-this-and-not-that/</link>
		<pubDate>Wed, 30 Jun 2010 06:39:01 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=302</guid>
		<description></description>
		<content:encoded><![CDATA[Things from the first day of class at ITP:
<ol>
	<li><a href="http://feltron.com/" target="_blank">Feltron Annual Report</a>.  An excruciatingly extensive collection of Nicholas Felton's life each year since 2005.</li>
	<li><a href="http://trackingtransience.net/" target="_blank">Tracking Transience</a>. Talk about excruciating, Hasan Elahi has taken a photo of almost everything he has done since 2002 in response to being questioned by the FBI.</li>
	<li><a href="http://www.metmuseum.org/toah/works-of-art/2002.274a-e" target="_blank">Every Shot Every Episode</a>.  By Jennifer &amp; Kevin McCoy this piece is the entire series of Starsky &amp; Hutch segmented into it's component parts such as "Every Wallpaper" and "Every Character Looks Left."</li>
	<li><a href="http://upload.wikimedia.org/wikipedia/commons/2/29/Minard.png" target="_blank">Napoleon's March into Russia</a>. An interesting use of multiple dimensions in Charles Joseph Minard's infographic from 1869 depicting the depletion of Napoleon's army with respect to the path taken the time and the recorded temperature.</li>
	<li><a href="http://newsmap.jp/" target="_blank">Newsmap</a>. An RSS news visualizer of top headlines from various countries.</li>
	<li><a href="http://chelseaartmuseum.org/digitalartatgoogle/" target="_blank">Data Poetics</a>.  An art show at Google in New York City of various artists and their works expressing and interpreting data in various visual formats.</li>
</ol>
It was just the first day of class.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2010-06-30 02:39:01</wp:post_date>
		<wp:post_date_gmt>2010-06-30 06:39:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-this-and-not-that</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[272905680]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Clouds</title>
		<link>http://l/~sklise/stevenklise.com/itp/clouds/</link>
		<pubDate>Sun, 04 Jul 2010 17:20:09 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[Clouds made in Processing.

Just messing around. Might add a kite. Or a paper airplane.
Or a house suspended by a bunch of balloons.

<object width="601" height="451"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=13077066&amp;server=vimeo.com&amp;show_title=0&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" /><embed src="http://vimeo.com/moogaloop.swf?clip_id=13077066&amp;server=vimeo.com&amp;show_title=0&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="601" height="451"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2010-07-04 13:20:09</wp:post_date>
		<wp:post_date_gmt>2010-07-04 17:20:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clouds</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Two Videos of Homework]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/two-videos-of-homework/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-02-10 18:02:51</wp:comment_date>
			<wp:comment_date_gmt>2011-02-10 18:02:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] is an update of Clouds, v1. It was made in Processing with data from Yahoo Weather [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Map for 9 Places in New York City</title>
		<link>http://l/~sklise/stevenklise.com/itp/map-for-9-places-in-new-york-city/</link>
		<pubDate>Sat, 17 Jul 2010 17:53:28 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[My apartment, Key Food, Papacitos, Nassau G, Enid's, McCarren Park, Mug's, The Strand, ITP mapped out via video clips of adjacent sidewalks.  From Brooklyn to Manhattan.

<object width="670" height="500"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=13415862&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" /><embed src="http://vimeo.com/moogaloop.swf?clip_id=13415862&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="670" height="500"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date>2010-07-17 13:53:28</wp:post_date>
		<wp:post_date_gmt>2010-07-17 17:53:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>map-for-9-places-in-new-york-city</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Two Videos of Homework</title>
		<link>http://l/~sklise/stevenklise.com/itp/two-videos-of-homework/</link>
		<pubDate>Wed, 21 Jul 2010 17:57:28 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=339</guid>
		<description></description>
		<content:encoded><![CDATA[Two recent assignments for the class Data &amp; Art Transformations at ITP.

This is Midtown Manhattan, the white dot is the Empire State Building. Mouse clicks sends an XML request to the Google Maps API for directions from the mouse position to the Empire State Building which are then drawn on screen.
<object width="670" height="536"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=13520681&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" /><embed src="http://vimeo.com/moogaloop.swf?clip_id=13520681&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="670" height="536"></embed></object>

This is an update of <a href="http://stevenklise.com/itp/clouds/">Clouds, v1</a>.  It was made in Processing with data from Yahoo Weather XML.

The kite is color coded to the current temperature and floats around between the bounds of the day's forecasted high and low. The clouds move relative to the current wind speed.

<object width="670" height="503"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=13520136&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" /><embed src="http://vimeo.com/moogaloop.swf?clip_id=13520136&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=0&amp;show_portrait=0&amp;color=00adef&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="670" height="503"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2010-07-21 13:57:28</wp:post_date>
		<wp:post_date_gmt>2010-07-21 17:57:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>two-videos-of-homework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Poem Skylines, In Analog</title>
		<link>http://l/~sklise/stevenklise.com/itp/poem-skylines-in-analog/</link>
		<pubDate>Sat, 24 Jul 2010 17:16:19 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=345</guid>
		<description></description>
		<content:encoded><![CDATA[In response to an assignment to create a non-digital visualization of text I traced two poems by Carl Sandburg and the table of contents of the collection <a href="http://www.amazon.com/Chicago-Poems-Dover-Thrift-Editions/dp/0486280578/ref=tmm_pap_title_0">Chicago Poems</a>.  I used the traces to create 'skylines' on black construction paper.  This weekend I am working on translating this analog exercise into a Processing sketch.

<img src="http://stevenklise.com/itp/s10_dat/20100724-chicagopoems.jpg" alt="Chicago Poems" />

<img src="http://stevenklise.com/itp/s10_dat/20100724-tobeachly1912.jpg" alt="To Beachly" />

<img src="http://stevenklise.com/itp/s10_dat/20100724-follies.jpg" alt="Follies" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date>2010-07-24 13:16:19</wp:post_date>
		<wp:post_date_gmt>2010-07-24 17:16:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>poem-skylines-in-analog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[328161149]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Carl Sandburg&#8217;s Chicago v0.5a]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/carl-sandburgs-chicago-v0-5a/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-02-10 18:04:16</wp:comment_date>
			<wp:comment_date_gmt>2011-02-10 18:04:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] preliminary analog sketch of my final project. The next step after the analog and Processing Poem Skyline projects. Carl Sandburg&#8217;s Chicago will take the entire book of [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Carl Sandburg&#039;s Chicago v0.5a</title>
		<link>http://l/~sklise/stevenklise.com/itp/carl-sandburgs-chicago-v0-5a/</link>
		<pubDate>Thu, 29 Jul 2010 21:07:38 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://stevenklise.com/itp/s10_dat/20100729-1.jpg" alt="" />
A preliminary analog sketch of my final project.  The next step after the <a href="http://stevenklise.com/itp/poem-skylines-in-analog/">analog</a> and Processing Poem Skyline projects.  Carl Sandburg's Chicago will take the entire book of Chicago Poems (or as much as I manage) and turn each page in to a section of skyline layered on the other pages creating an entire city from the shape of Sandburg's poems about Chicago.

Another change is adding detail to the tops of the buildings based on the punctuation at the end of each line of the poems.

Stay tuned.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date>2010-07-29 17:07:38</wp:post_date>
		<wp:post_date_gmt>2010-07-29 21:07:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>carl-sandburgs-chicago-v0-5a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[346102940]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Chicago Skyline by Carl Sandburg</title>
		<link>http://l/~sklise/stevenklise.com/itp/the-chicago-skyline-by-carl-sandburg/</link>
		<pubDate>Fri, 03 Sep 2010 17:54:29 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/blog/?p=365</guid>
		<description></description>
		<content:encoded><![CDATA[This was my final project for the class I took this summer.  Written in Processing and my first foray into 3D with OpenGL.  It's available currently as a Java application to play around with <a href="http://stevenklise.com/itp/chicagoskyline/">here</a>.  A description/explanation is below.

<img src="http://stevenklise.com/itp/chicagoskyline/chicagoskyline.png" alt=""/>

Chicago Skyline by Carl Sandburg is an exploration of the shape of poems. In prose of course there is the paragraph which normally ends with the completion of a thought. In poetry line breaks are used more expressively and can give the poem a distinct shape. This project is an investigation of the shapes of poems. Sandburg's book Chicago Poems contains exactly what the title describes, poems about Chicago. If one rotates a poem 90 degrees counter clockwise and creates a trace of the text the resulting shape is reminiscent of a skyline.

Doing this with the first ten pages of Chicago Poems and turning the outlines in to three dimensional buildings creates a city. This city obscures the words of the text and focuses on the form the text creates. In the absence of true synesthesia, this projects creates a visual Chicago from Sandburg's words about the city. The result looks nothing like the real city of Chicago, it is Sandburg's Chicago.

To further analyze the shape of the text, line ending punctuation is used to construct ornaments on top of the buildings. These ornaments are specifically designed to evoke the shape of the punctuation used, a period or dot becomes an antenna and a comma or quote becomes a slanted antenna array. And to illustrate the form within each line in Version 4 of the project every instance of white space is illuminated with lit up windows on the sides of the buildings. With these windows illuminated we can see Sandburg's choices in word length as well as indentation.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>365</wp:post_id>
		<wp:post_date>2010-09-03 13:54:29</wp:post_date>
		<wp:post_date_gmt>2010-09-03 17:54:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-chicago-skyline-by-carl-sandburg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dataart"><![CDATA[Data&gt;Art Transformations]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[281316191]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Astral Plane</title>
		<link>http://l/~sklise/stevenklise.com/itp/?p=591</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=591</guid>
		<description></description>
		<content:encoded><![CDATA[Astral Plane is a mashup of a flocking system and cellular automata. The project grew out of a desire to combine a flocking system with the death and birth cycle of a cellular automata and just see what ended up happening. And I got a star like object, with organisms running out and making flare-like movements. On accident I ended up with a better star simulation than when I attempted to do just that on my midterm. Astral Plane is essentially a flocking system but when an Organism has too few or too many neighbors it dies at its current position leaving behind a ripple and is born again elsewhere.

When I started work on my final I wasn't sure what the result would look like, and this star-like form that emerged was great. When the Organisms die due to crowding or loneliness A bit more time with OpenGL and polishing the ripple effect and I might have an actual passable star.

But wait, there's more!

I noticed that some Organisms were floating around outside of the main mass, it looked cool but the Organisms looked lonely, they were out by themselves and I thought that I had written the program so that these Organisms would die off. The problem turned out to be that I was using the same variable name for two different uses. Once I fixed that I got a totally different result. The star was gone and in it's place was an amoeba like form.

It's interesting how a large shape seems to form with holes growing and shrinking within and sometimes islands of Organisms within the bigger shape.

Sources:
<a href="http://toxiclibs.org/">ToxicLibs
</a><a href="http://www.openprocessing.org/visuals/?visualID=8885 ">Shiffman 3D Flocking</a>
<a href="http://www.openprocessing.org/visuals/?visualID=6753">Clouds Are Looming</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>591</wp:post_id>
		<wp:post_date>2011-04-27 18:56:40</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stupid Pet Trick</title>
		<link>http://l/~sklise/stevenklise.com/itp/stupid-pet-trick/</link>
		<pubDate>Sat, 16 Oct 2010 20:53:23 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[This assignment for PComp was to create a "stupid pet trick" by taking all the skills we have learned thus far in the labs and create something amusing or engaging.  Continuing the theme of the <a href="http://stevenklise.com/itp/sudden-motion-ball-sink-v2/">ball sink game</a> I made in Procressing I decided to take the same primitive game and add sensors, a servo and a score board.

The player tilts the board rolling the ball into the hole which decreases the readings on a photocell to below a certain threshold, and then the Arduino turns a servo 90 degrees to knock the ball out of the hole.  Upon each score the 7-segment LED updates.  A reset button was added in to restart the score board without needing to hit the main reset button built in to the Arduino.

I built the circuit entirely on a breadboard and wrote the code before starting on fabrication to be sure that if errors happened they could be isolated to the building process.  And almost immediately the scroll saw proved unwieldy for cutting a perfect circle in the masonite.  As a result the ping pong ball doesn't always block the proper amount of light to trigger the photocell.  If I were to make a Version2 of this I'd make the ball conductive and have to leads along the edge of the hole to prevent false triggers by low ambient light or no triggers from too much.  I would also exchange the servo with a solenoid as currently the ball always gets pushed in the same direction but a solenoid would pop the ball straight up adding a variety to which direction it would go on a reset.

<a href="http://stevenklise.com/itp/2010-fall/pcomp_pettrick_code.zip">Download Arduino Code</a>

<iframe src="http://player.vimeo.com/video/15904819?byline=0&amp;portrait=0" width="561" height="316" frameborder="0"></iframe>
<img src="http://stevenklise.com/itp/2010-fall/pcomp_pettrick_bb.jpg" alt=""/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2010-10-16 20:53:23</wp:post_date>
		<wp:post_date_gmt>2010-10-16 20:53:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stupid-pet-trick</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[215848732]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; The Labs So Far]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/the-labs-so-far/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2010-10-25 15:17:51</wp:comment_date>
			<wp:comment_date_gmt>2010-10-25 15:17:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I started the Servo Lab I knew that I needed to use a servo to complete my stupid pet trick.  Hooking up the circuit was by this point not a problem at all.  A pull-down resistor on the [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Brownian Light Bikes (Without Collisions)</title>
		<link>http://l/~sklise/stevenklise.com/itp/brownian-light-bikes-without-collisions/</link>
		<pubDate>Sun, 17 Oct 2010 00:51:33 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[This is maybe just the start of a Tron-like game, though with the twist of non-right angle turns.  Also I have yet to implement collision detection.  I created a LightBike class with parameters of initial position, color and likelihood that it will change direction.  When a bike does change direction that change is made in a random angle mimicking Brownian Motion.  I spent quite a few hours trying to get the bike's behavior when bouncing off the edge of the wall to meet the physics properties of reflected light and I though I finally got it until one of the bikes got stuck in the bottom right corner.  That's a problem for the next assignment I think, or at least for tomorrow.

<a href="http://stevenklise.com/itp/2010-fall/icm_hw04">Run the Applet</a>

<a href="http://stevenklise.com/itp/2010-fall/icm_hw04_BrownianLightBike_v2.zip">Download the Processing Code</a>

<img src="http://stevenklise.com/itp/2010-fall/icm_hw04.png" alt=""/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2010-10-17 00:51:33</wp:post_date>
		<wp:post_date_gmt>2010-10-17 00:51:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brownian-light-bikes-without-collisions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[324189717]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Responses to McLuhan, Garnett &amp; Meiselas, and Lethem</title>
		<link>http://l/~sklise/stevenklise.com/itp/responses-to-mcluhan-garnett-meiselas-and-lethem/</link>
		<pubDate>Mon, 25 Oct 2010 13:36:37 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Marshall McLuhan's "Understanding Media." Chs. 1&amp;2</h2>

In the first two chapters of <em>Understanding Media</em> Marshall McLuhan makes claims that the medium is what matters and is the message and then that media can be classified into two groups he calls "hot" and "cool" media.

McLuhan claims that in the electric age and the age of automation things, items, media, events were no longer strings of cause and effect but because of automation each event happens on its own and does not imply a cause or an effect.  He blames electricity as ending sequence because electricity is instant, though in reality every event has a speed, a time, and so this is just a failure of perception to catch what is happening.  McLuhan goes on to explain that it was due to mechanical processes and a 'speeding up' that allowed movies to become creative with story order through shooting different scenes at different times and splicing film I suppose.  Yet non-linear storytelling was just as possible before the movie, and in fact happens on accident in oral storytelling frequently just due to forgetting a story element and interrupting the flow of time to tell the just remembered part.  The mechanization required for movies to exist did not make non-linear, non-causal storytelling possible but instead put this type of storytelling into a brand new media.

The Cubist movement is deemed by McLuhan to be a statement that '<em>the medium is the message</em>.'  That a cubist painting reveals many different view points simultaneously and in doing so focuses more on the medium than the content of the painting.  If the medium and not the content is the message then why do multiple paintings exist?  It seems to me that if cubists really believed what McLuhan says they do then only one painting by each painter would be necessary, to show the cubist-view, any change in subject matter, in content, would necessarily not change the message.  If truly the medium is the message and the content is 'like the juicy piece of meat carried by the burglar to distract the watchdog of the mind,' then when an artist, a director, a photographer, a writer creates more than one work essentially the second work is the same but with a different distraction.  Clearly the choice of medium is important in conveying a message, but the medium can't rest on its own to tell the message.  It seems to me that if this were true McLuhan could have published this book with no words inside, the medium: the 365 pages of the book, the content: a distraction.

In the second chapter McLuhan defines media as falling in one of two categories: hot or cool.  And he initially defines hot media as "one that extends one single sense in 'high definition.'"  And then goes on to claim that movies are a hot media though they require two senses, and that the telephone is not a hot media because it does not portray enough information to the ear whereas the radio is a hot media when the earpiece of the phone and the radio are just as capable of sending the same amount of information.  Later in the chapter he refers to reckless drivers as being "hot drivers," which is certainly confusing.  What sense do reckless drivers convey in high definition?

This chapter does raise an interesting point of classifying media into two categories by looking closely at the differences in what at face value may seem very similar types of media.  McLuhan though gets confused with trying to label everything, media, drivers, people societies and cultures as being either hot or cool at which point 'hot' needs though is not formally given many definitions.


<h2>Response to <em>On The Rights Of The Molotov Man</em></h2>

This piece had the opportunity to become a real debate concerning appropriation of media and copyright issues but Garnett and Meiselas both wrote in ways that did not truly engage the other side.  Garnett after guardedly defending her choice of using the photograph as inspiration for her painting and trying to justify that by saving the image for a while to forget where it came from releases the image from copyright restrictions.  Her response has the feeling that she hadn't seriously thought about the fact she was using someone else's photograph and in response got immediately defensive without thinking that she was decontextualizing the struggle of the man in the photograph.

Meiselas on the other hand presents a nice case for respecting copyrights, or at least the original piece.  In this age of the internet where images and text can be quickly copied and pasted into any other form devoid of the context of the original image or text.  This is especially poignant as Meiselas points out when the image is a document of an historic event.  Regardless of how I feel about appropriating images I had only ever thought about the response and effect appropriation would have on the creator of the photograph, not on the subject.  Though the piece did not seem to truly engage the underlying bigger issue the idea of not only fairness to the creator of the content but also the subject.


<h2>Response to <em>The Ecstasy of Influence</em></h2>

In this piece Lethem tries to point out that most every work in any media is influenced by some previous work and as such to a degree plagiarizes that piece.  But then he says that this is not a big deal.  He also claims that if a piece or celebrity such as Mickey Mouse or Madonna reaches a point of near saturation of a culture then these figures should become public domain merely through their fame.  This to me seems a bit extreme.  Allowing anyone to copy off of Mickey Mouse because Mickey is so famous and recognizable opens the door to subverting the message and the context that is Mickey Mouse and as such the well known brand of Disney will become muddled with any artwork featuring the mouse.  Similarly to Bandaid, though a trademark, becoming the word used for a self-adhesive bandage.  This lessens the power of the actual Bandaid brand and creates a confusion.  Though to these opinions Lethem would probably respond with a statement that such confusion is now impossible to avoid: "Today, when we can eat Tex-Mex with chopsticks while listening to reggae and watching a YouTube rebroadcast of the Berlin Wall's fall..."

So maybe the internet and the rest of the technological age has done something to the sanctity of a copyrighted work and the laws should reflect that.  But should it be as extreme as to base copyrights on the sphere of influence?  If you have little to no influence you are protected, but if you have a large number of Mouseketeers you are unprotected for copyrights.  Lethem, searching for an understanding for the need to reform copyright laws steps a bit too far in the other direction but along the way brought up some good points.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2010-10-25 13:36:37</wp:post_date>
		<wp:post_date_gmt>2010-10-25 13:36:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>responses-to-mcluhan-garnett-meiselas-and-lethem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[253294820]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quite A Pair: Stop Motion Video</title>
		<link>http://l/~sklise/stevenklise.com/itp/quite-a-pair-stop-motion-video/</link>
		<pubDate>Mon, 18 Oct 2010 16:27:53 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[Stop Motion video with sock puppets with hard-to-bend wireframes. <iframe src="http://player.vimeo.com/video/15875225?byline=0&amp;portrait=0" width="561" height="316" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2010-10-18 16:27:53</wp:post_date>
		<wp:post_date_gmt>2010-10-18 16:27:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quite-a-pair-stop-motion-video</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Brownian Light Bikes V4</title>
		<link>http://l/~sklise/stevenklise.com/itp/brownian-light-bikes-v4/</link>
		<pubDate>Fri, 22 Oct 2010 16:47:12 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[Now with collision detection that works sometimes.  Not all of the time.  To see if the point of the bike intersects with a trail I find the end points of each individual line segment, and see if those two points and the bike are collinear, there appear to be margins of error I haven't pinned down yet.  But right now I have a lot of other homework to do and spending four more hours on this right now doesn't seem worth it.  Though I am going to come back to this and make collision better and add an ability to respawn killed bikes.  And way out there on a limb is the ability to control one of the bikes with the keyboard.

<a href="http://stevenklise.com/itp/2010-fall/icm_hw05_brownianbikes_v4">Run the applet.</a>

<a href="http://stevenklise.com/itp/2010-fall/icm_hw05_BrownianLightBike_v4.zip">Download the source.</a>
<img src="http://stevenklise.com/itp/2010-fall/icm_hw05_screenshot.png" alt=""/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2010-10-22 16:47:12</wp:post_date>
		<wp:post_date_gmt>2010-10-22 16:47:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brownian-light-bikes-v4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[289106429]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Labs So Far</title>
		<link>http://l/~sklise/stevenklise.com/itp/the-labs-so-far/</link>
		<pubDate>Mon, 25 Oct 2010 15:17:38 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[This weblog post is a summary of the labs I've done so far in Physical Computing.
<h2>Lab1: Setting up a breadboard &amp; <a href="http://itp.nyu.edu/physcomp/Labs/DigitalInOut">Lab2:Digital Inputs and Outputs</a> with Arduino</h2>
In the spring after I had been accepted to ITP I bought an Arduino and the <a href="http://oreilly.com/catalog/9780596155520"><em>Getting Started With Arduino</em></a><em> </em>book.  As such these first two labs were a bit of a review to me.  However this was my first introduction to electronic schematics with the squiggly lines for resistors and all.  For the most part though that diagram did more to confuse me than inform.  Not knowing about electricity and basic circuits this diagram abstracted what was happening even more than it already was.  I didn't have any trouble getting the LEDs to light up but was not sure as to why to use the resistors I did.

At the last hour before class I attempted to get creative and hook up the leads for the switch to the door and frame of my locker, however I quickly discovered that the metal from the door is connected to the metal of the frame at the hinges, so the switch was always on.
<h2>Lab3:<a href="http://itp.nyu.edu/physcomp/Labs/AnalogIn">Analog In</a></h2>
In this lab we looked at how to read inputs from an analog sensor, namely a potentiometer.  For the most part this lab went swimmingly, again I mostly ignored the technical schematic and focused on the diagram with the pictures.  In hooking up the potentiometer I found that if I switched the power and ground hookups turning the knob to the right would yield opposite results, if before the values increased, now they would decrease.

After exploring with the potentiometer and its three hookups (power, ground, analog pin 0), I then used the one force sensor I had in my kit to recreate the second example.  It worked, I got the light to light up based on the pressure applied to the sensor.  But the reason for the resistor attached to the ground on the sensor was beyond me.  We talked about this afterwards in class and so I found out what a 'pull-down resistor' is.  This resistor is used to give the Arduino a reference to what 'low' or 'ground' is when the sensor is not triggered.  I can't explain this concept as well as it was described to me, but the concept makes sense.
<h2>Lab4:<a href="http://itp.nyu.edu/physcomp/Labs/Electronics">Electronics</a></h2>
I've always wanted to mess around with a multimeter but never have until I ran to the Computer Store to buy one for this lab.  After discovering a bit too late that the black object in my kit was not a voltage regulator but was instead a resistor, I unhooked it and resorted to powering the breadboard with the 5V hookup on my Arduino.  After that snafu the rest of the lab went rather well after I had figured out the scale on the multimeter.  Thinking through what magnitude of a current, voltage, or resistance I was expecting certainly helped not only for knowing how to set the multimeter but also to understand the underlying circuits, how electricity works.  After completing this lab I'm still not sure when or where to add what type of resistor, but once it's in the circuit and working I can tell why and how it is functioning.
<h2>Lab5:<a href="http://itp.nyu.edu/physcomp/Labs/Servo">The Servo</a> &amp; Lab6:<a href="http://itp.nyu.edu/physcomp/Labs/ToneOutput">Tone Output</a></h2>
When I started the Servo Lab I knew that I needed to use a servo to complete my <a href="http://stevenklise.com/itp/stupid-pet-trick/">stupid pet trick</a>.  Hooking up the circuit was by this point not a problem at all.  A pull-down resistor on the force sensor and power ground and input for the servo.  If I had skipped this lab and used <a href="http://www.google.com/search?aq=f&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=arduino+servo">Google</a> to help me hook up a servo I would have skipped directly to the Servo library and not figured out what is going on to move the motor.  But since I did do the lab I now understand that incrementing the servo requires pulsing the electricity for a calibrated amount of time that maps the time of the pulse to the angle which the servo should move to.

It's a bit clunky to use this code every time a servo gets moved which segues nicely into the next part of the lab which is using the Servo library.  Having experience with libraries in Processing it was interesting in the different way a library is loaded.  But once the library was loaded controlling the servo got much easier and more intuitive (via abstraction from what is actually happening).

In the Tone lab, seeing how the sensor values from the photocell map to different pitches was interesting.  Though I wasn't really able to tell what pitch was being played it was still possible to tell that pitch was being changed based on the light hitting the photocell.  And the tone() command is pretty straight forward, the pin you want to send the tone to, the pitch as an integer between 100 and 1000 and then the duration in milliseconds to play that tone.  In the second part when the pitches library was used things got more interesting.  Though I did not really read through the code of this library it seems reasonable to assume that in pitches.h all the notes defined are merely integer variables that correspond to a different pitch, probably between 100 and 1000 like in the first part of the lab.

This was also the first time I used an array in an Arduino program.  I've had a lot of experience with arrays in Processing but had not yet ventured in to testing them out in Arduino.  I remember reading in <em>Getting Started With Arduino</em> that the Arduino has a limited memory and as such have been a bit timid to test the bounds of just how large a program it can load.  Clearly an array of 8 notes is well inside its functionality, though it seems that programming efficiency is more important when dealing with the limited processing power of the Arduino compared to that of an i5 or i7 chipset.

<h2>Lab7:<a href="http://itp.nyu.edu/physcomp/Labs/SerialOut">Serial Output</a></h2>

Reading values from the Serial was something I've done already in a few of the labs and just in troubleshooting.  But really messing around with those values, how they are sent, and also sending them to Processing, I have not done.  I've used the ASCII table for HTML before but not to transform characters to decimal notation or raw bytes before.  It makes sense why certain values are coming out, it's a one-to-one correspondance between the input value and it's corresponding spot on the table.  But the why, why to choose one format over another is still a bit hazy to me.  Of course if you send in DEC you can send numbers larger than 255 which is the max to be sent with BYTE.  But why not then always send in DEC?

In the first part of the lab I didn't like that all the values were printing one after another with no line breaks, so I switched the code from Serial.print() to Serial.println(), it looked nice.  Until I hooked up the program to Processing and instead of a smooth graph got what seemed to be a sensor value then two other constants and then the next sensor value and so on.  After a while of staring at these results and not sure why this was happening I realized that because I had Serial.println() the carriage return and new line characters were being sent and were displaying in the graph.  Once I changed the code to Serial.print() the graph displayed as it should.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2010-10-25 15:17:38</wp:post_date>
		<wp:post_date_gmt>2010-10-25 15:17:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-labs-so-far</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Elevators, A Misunderstood Public Technology</title>
		<link>http://l/~sklise/stevenklise.com/itp/elevators-a-misunderstood-public-technology/</link>
		<pubDate>Tue, 26 Oct 2010 16:50:42 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[I spent some time on the Tisch elevator the other day observing how it is used by different people.  To start with, how does it work?  There's a panel with a bunch of buttons for each individual floor.  When one is pressed a light turns on behind the button and a computer processes the floor requests and compares them to what buttons on individual floors have likewise been pressed and then plots a course up or down accordingly.

Some users on the elevator know exactly what button to press when they get on and where it is on the panel.  This familiarity with the machine does end up with those users hitting a button without looking to see if that floor has already been chosen by someone else currently on the elevator.  Though on this elevator a double hit on the same button does not cancel out the call to that floor I remember on some elevators this being the case.  Other users, probably new to the building, spend a few seconds looking for the button they want before pressing it, and as well even looking directly at the button sometimes press an already lit button a second time even though this second tap does nothing to change what the elevator will do.  But some users do, upon seeing their floor has already been chosen, pull their hand back and decide not to press the button again.  It is interesting to wonder what is going through a users head when they decide to, or not to, press a button that has already been activated.  Whether it is a doubt that the elevator will really stop at this floor or a feeling that the individual user needs to actively participate even though someone had already performed the necessary task.

Another element of the elevator is the row of numbers above the door that lights up based on which floor the elevator is at, aside from the light a beep is sounded each time the elevator switches floors, with such feedback a user should always know what floor the elevator is on when it stops.  However in my experience some users are unaware of what buttons have been pressed that aren't their chosen floor or even where the elevator is in the path of the building.  At one point two users were in the car one who had chosen floor 3 and the other who had chosen floor 9.  At 3 the person who wanted to get off at 9 moved past the other user and positioned to step out as the door was opening and took a second or so to realize that this was just floor 3 not the ninth.  Many indicators should have informed the user otherwise, only 2 beeps has happened, the light above the door was at 3 and the time that had passed between leaving the first floor and getting to the third is a fraction of how long it would take to get all the way to the ninth floor.  This same confusion happens when the elevator is going down.  Frequently users will attempt to get off when the elevator is not yet on the first floor but is stopping to pick up more passengers.  This can cause a slow down in the loading of new passengers and as such this eagerness to get off actually slightly increases the time it takes to get to the first floor.

It seems that a lot of the points of friction to using an elevator occur due to the users not paying enough attention to the elevator and the feedback that it is giving.  So is the solution to make all the feedback, buttons lighting up, alerts as to which floor the elevator is on more ostentatious?  For people that use the elevator frequently an increase in feedback, louder noises etc could get extremely annoying though they would aid the users who are less attentive.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2010-10-26 16:50:42</wp:post_date>
		<wp:post_date_gmt>2010-10-26 16:50:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>elevators-a-misunderstood-public-technology</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[271455322]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Visual Intelligence&quot; by Donald Hoffman</title>
		<link>http://l/~sklise/stevenklise.com/itp/visual-intelligence-by-donald-hoffman/</link>
		<pubDate>Wed, 27 Oct 2010 22:43:38 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=82</guid>
		<description></description>
		<content:encoded><![CDATA[I had heard about phantom limb syndrome as well Ramachandran's research but have never thought about it as the brain registering the sensation of touch at a point outside of the body.  The moment where a patient pointed to a place in mid air where their forearm would be and stating that they felt something right there was rather amazing to think about.  That the sense of touch is not necessarily tied to the body but is an interpretation that happens in the brain.  The diagram mapping part of the somatosensory cortex to each body part and inferring how neurons are remapped when a limb is missing reminds me of how the blind have greater perception in their other senses.  

This chapter of the book was very interesting, though I don't quite understand what context to put it in, how it relates to physical computing.  I guess the abstract notion of when a thing, an object, a sensor, is missing to map those functions to another sensor.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2010-10-27 22:43:38</wp:post_date>
		<wp:post_date_gmt>2010-10-27 22:43:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visual-intelligence-by-donald-hoffman</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[275242553]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lab8:Multiple Serial Outputs</title>
		<link>http://l/~sklise/stevenklise.com/itp/lab8multiple-serial-outputs/</link>
		<pubDate>Thu, 28 Oct 2010 17:49:44 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[For my media controller project I had already been messing around with an accelerometer but rather aimlessly.  It was going well and easy until I got to the Processing sketch.  At first nothing but a black screen showed up.  I initially decided it was because the background and fill colors were not declared.  After that though, the circle would show up on screen for a brief instant and then disappear.  The lines in the code that mapped the sensor values to screen positions used a range that was outside what my accelerometer was reading.  The x and y axis were reporting values between 300 and 400 but the map function started at 430 and as such the ellipse was being drawn outside of the window.  Fixing the mapping range put the ellipse in the window and it proceeded to move accordingly.

I noticed as I was testing out the buffering/punctuated that when I moved the accelerometer or pressed the switch the results showed up with a bit of delay, which was probably due to the buffer getting filled up.  After switching to the handshake method this delay was greatly reduced.  However getting the handshake method to work was a bit problematic as I had accidentally capitalized Hello in Arduino but Processing was looking for 'hello' instead.
<img src="http://stevenklise.com/itp/2010-fall/pcomp_lab8.png" alt=""/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2010-10-28 17:49:44</wp:post_date>
		<wp:post_date_gmt>2010-10-28 17:49:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lab8multiple-serial-outputs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Acting Together v0.1</title>
		<link>http://l/~sklise/stevenklise.com/itp/acting-together-v0-1/</link>
		<pubDate>Sat, 30 Oct 2010 20:38:30 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[I've had this idea for a long time and am finally starting to make it happen.  I don't know everything I need to know yet to complete it, namely getting Processing to access a database (probably going with MySQL as I know at least a piddling about it), but also what the GUI implementation will be.  Oh right, you probably want to know what this project is.

<em>Acting Together</em> is an interactive data visualization that highlights repeated collaboration amongst actors and directors.  The idea started years ago as I was watching Arrested Development and noticed a fair number of actors in guest starring roles that also starred in Best In Show, A Mighty Wind and For Your Consideration.  I was intrigued by seeing this group of actors sprinkled throughout a non-Christopher Guest project.  This got me to wondering what patterns may show up by looking in to how actors repeatedly work together.

Attempting to find groups of actors on IMDB involved going to a movie's page, scrolling to the cast section and then opening a tab for each actor and scrolling through trying to spot the differences.  There seems to be no easier method of spotting repeated collaboration.  It would be great if I IMDB had an API for accessing their data, however their licensing plans start at $15,000.00, a bit too steep for an experiment.  I'm going to have to make my own database, a daunting step that has kept me from starting on this project before now.

As of this writing I'm still sorting out the data structures, but in the coming weeks I'm hoping to tie this project in to the homework for Introduction to Computational Media and end up with it as my final project.  Stay tuned.  And sorry if this post was not entirely cogent, my code is much clearer.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2010-10-30 20:38:30</wp:post_date>
		<wp:post_date_gmt>2010-10-30 20:38:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acting-together-v0-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Acting Together v0.3</title>
		<link>http://l/~sklise/stevenklise.com/itp/acting-together-v0-3/</link>
		<pubDate>Mon, 08 Nov 2010 22:39:09 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[It's been a week since I first formalized the idea for this project and I'm at a proof of concept stage.  Before getting in to databases and APIs I've compiled a short list of actors and movies based around the collaboration that happens amongst Christopher Guest movies and seeing what else these actors end up working on.  At this stage only connections between 2 actors are determined.  For the next version of this program I am going to reorganize the classes of Movie and Actor and include Directors.  And also make more sense of the display as opposed to two static columns, just how I'm not sure yet.
<img src="http://stevenklise.com/itp/2010-fall/icm_midterm_screen.png" alt="Screen shot of Acting Together version 0.3"/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2010-11-08 22:39:09</wp:post_date>
		<wp:post_date_gmt>2010-11-08 22:39:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acting-together-v0-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Processing in XCode: Almost!</title>
		<link>http://l/~sklise/stevenklise.com/itp/processing-in-xcode-almost/</link>
		<pubDate>Tue, 09 Nov 2010 15:56:37 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=95</guid>
		<description></description>
		<content:encoded><![CDATA[Each week my Processing programs get longer and longer and the Processing IDE started to wear on me.  If a line of text went beyond the width of the sketch window the horizontal scroll would go right and would then disappear requiring some voodoo to get back to the left side of the code.  Syntax highlighting is rather limited to just the built-in functions and variables.  And code completion? Yea right.

So I've been using a <a href="http://www.onebitwonder.com/projects/processing">bundle</a> for <a href="http://macromates.com/">TextMate</a> that does syntax highlighting, code completion, pretty much everything and with a more customizable color scheme.  However, it uses a separate installation of the Processing library that is version 1.1 even though the 1.2 update has been released.  Frustrating, but not a big deal.  The biggest deal is the poor error handling.  I've found myself a few times debugging a sketch I wrote in TextMate by opening it up in ProcessingIDE just to identify what the error is.

Enter Xcode.

I was directed to <a href="http://timothytwillman.com/itp_blog/?p=183">this post</a> by ITP alum Timothy Willman who created a true template for Processing projects in Xcode.  Following Willman's tutorial I found that I had to put the template in /Developer/Library/Xcode/Project Templates/XXXXX/Processing where XXXXX is any current subdirectory in the Project Templates folder.  It's a really excellent template, similar to the <a href="http://code.google.com/p/proclipsing/">Proclipsing</a> template for Eclipse.

All that said, I'm still getting a weird error where Xcode doesn't like it when I attempt to add an int to an ArrayList.

<em>UPDATE:</em> Thanks to Miguel, the ArrayList issue is solved.  This template was using Java 1.2/1.3 which does not allow primitive data types to be stored in ArrayLists.  Go to the file "build.xml" and then to line 37:<pre>source="1.3" target="1.2"</pre>
and change it to read: <pre>source="1.5" target="1.5"</pre>
And you're cookin' with grease.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2010-11-09 15:56:37</wp:post_date>
		<wp:post_date_gmt>2010-11-09 15:56:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>processing-in-xcode-almost</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="misc"><![CDATA[Misc.]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[244876091]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Paulo Barcelos]]></wp:comment_author>
			<wp:comment_author_email>paulo@azucrina.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-14 11:12:00</wp:comment_date>
			<wp:comment_date_gmt>2011-09-14 11:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hey, did you succeed in your task? I am still looking for an usable xcode template for processing but can't find it...</p>

<p>The ITP link you posted is broken :(</p>

<p>Would you mind making available your version of this template?</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Acted Together.</title>
		<link>http://l/~sklise/stevenklise.com/itp/acted-together/</link>
		<pubDate>Wed, 10 Nov 2010 22:16:36 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[Well, I didn't do enough research before I started this project.  IMDb does in fact have the ability to<a href="http://www.imdb.com/search/common"> search for collaborations</a> between two people and also common stars of two different titles.  It's hidden deep inside the Advanced Search option, and doesn't look very interesting except for the data contained.  However the database and the speed are all there.

So.  Do I continue with my project and hope to do a better job than IMDb or do I cede to them and move on to a new project?  Not sure yet.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2010-11-10 22:16:36</wp:post_date>
		<wp:post_date_gmt>2010-11-10 22:16:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acted-together</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>See Fido&#039;s friends.</title>
		<link>http://l/~sklise/stevenklise.com/itp/fido-gets-a-social-network/</link>
		<pubDate>Thu, 18 Nov 2010 23:17:28 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[NEW YORK — There are over 500 millions users on Facebook now, from countries all of the world and of all ages.  However every one of these users is the same in one way: They are humans, not dogs.

Because dogs are terrible at using keyboards, we are creating a new interface for the dogs of the world to access to a list of their friends.  This collar will be equipped with an LED screen, RFID tag and USB connection.  The LED screen will show the name of your dog, a list of names of other dogs yours has interacted with at the local dog park or on the street and also, a phone number or address in case Fido gets lost.

When you come home from some time outside with Fido you can hook this collar up to your computer and see what other dogs Fido has been socializing with and how often.  After a few outings a good picture of Fido's acquaintances will begin to appear on your computer screen.

<img src="http://stevenklise.com/itp/2010-fall/aff003s.jpg" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2010-11-18 23:17:28</wp:post_date>
		<wp:post_date_gmt>2010-11-18 23:17:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fido-gets-a-social-network</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Crying Over Spilt Ideas, or Cryware]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/crying-over-spilt-ideas-or-cryware/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2010-12-02 21:12:57</wp:comment_date>
			<wp:comment_date_gmt>2010-12-02 21:12:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] we started thinking about how to make Fido&#8217;s networked collar things quickly got complicated.  The trouble was in detecting proximity to another dog collar and [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Get The Goods</title>
		<link>http://l/~sklise/stevenklise.com/itp/get-the-goods/</link>
		<pubDate>Fri, 26 Nov 2010 19:19:51 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[A three week project in Comm Lab with Nick Santaniello and Andi Cheung.  Influenced greatly by Bullitt, The French Connection, and all other 70s cop capers.  All three of us spent time behind and in front of the camera which is a Canon 5D Mark II which has revived my itch for expensive cameras.

<iframe class="fullwidth" title="YouTube video player" class="youtube-player" type="text/html" width="853" height="510" src="http://www.youtube.com/embed/D16Ip0MMQDU?rel=0&amp;hd=1" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2010-11-26 19:19:51</wp:post_date>
		<wp:post_date_gmt>2010-11-26 19:19:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-the-goods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Proposal for ICM Final</title>
		<link>http://l/~sklise/stevenklise.com/itp/proposal-for-icm-final/</link>
		<pubDate>Mon, 29 Nov 2010 01:52:50 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- p.p1 {margin: 0.0px 0.0px 5.0px 0.0px; font: 18.0px 'Berthold Akzidenz Grotesk BE'} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px 'Berthold Akzidenz Grotesk BE'} p.p3 {margin: 0.0px 0.0px 7.0px 0.0px; text-align: justify; font: 12.0px 'Berthold Akzidenz Grotesk BE'} p.p4 {margin: 0.0px 0.0px 7.0px 0.0px; text-align: justify; font: 9.0px Monaco; min-height: 12.0px} p.p5 {margin: 0.0px 0.0px 7.0px 0.0px; text-align: justify; font: 12.0px 'Berthold Akzidenz Grotesk BE'; min-height: 12.0px} span.s1 {letter-spacing: 0.0px} span.s2 {font: 9.0px Monaco; letter-spacing: 0.0px} --><strong>Acting Together</strong>

<strong>
</strong>

<img src="http://stevenklise.com/itp/2010-fall/mockup-01.png"/>

Rough outline:

Visualize different movie/tv projects and how actors flock around directors or some such.  This project will ignore sequels and movie franchises, because repeated instances of collaboration are way less interesting in that case.

The user interface for this site will start with Nodes for the main clumps of actor/director/movie sets I will be working with.  Such as Cohen Brothers or Christopher Guest or Jud Apatow or David Simon or Wes Anderson or Pixar or Paul Thomas Anderson or Quentin Tarantino, and then clicking on these Nodes will zoom in to the specific movies and actors and directors contained within.  Actors that have parts in multiple Nodes will have connecting lines from the current Node being viewed to other Nodes.

A 3D interface would be advantageous for this interface as it would allow the of-interest sections of this network map to be in focus but still show the connections.  Either 3D or alpha channel manipulation.

Early in the process of turning this idea into a project I realized that having a complete database of movies visualized would be unfeasible in the time allotted for this final, as well the sheer amount of data, downloading the IMDB actors list is 500MB and 10,000,000 lines.  But then, handpicking subsets of the whole list of actors will certainly give a biased result, I’m only choosing subsets that have high repeated collaboration rates because that will be more interesting to view.  As such the final project should include a statement as to how the data was chosen.

Technologies:

This project will likely require PHP/MySQL to store all of the necessary data.  The reason is to allow the final result to be run on multiple computers and enable the dataset to be updated after an initial launch.  For scalability using MySQL is a much better decision than txt or csv files.

I’m also considering porting the final program to Processing.js to allow a more widespread access to the finished result.

As to the display of the data, instead of laying out all the points manually I am going to either make each data point an attractor or give edges different weights based on the data to arrange nodes or align everything to a static grid.  The ideal layout will become apparent as I hash out the data structures.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2010-11-29 01:52:50</wp:post_date>
		<wp:post_date_gmt>2010-11-29 01:52:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>proposal-for-icm-final</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="icm"><![CDATA[ICM]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Crying Over Spilt Ideas, or Cryware</title>
		<link>http://l/~sklise/stevenklise.com/itp/crying-over-spilt-ideas-or-cryware/</link>
		<pubDate>Thu, 02 Dec 2010 21:12:52 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[As we started thinking about how to make <a href="http://stevenklise.com/itp/fido-gets-a-social-network/">Fido's networked collar</a> things quickly got complicated.  The trouble was in detecting proximity to another dog collar and at the same time identifying which other collar this was.  RFIDs need power and close proximity, so if two dogs are interacting but their collars are not getting close enough to each other then no 'hit' would register.  Infrared would allow a greater distance between the two collars, however lining up two infrared emitter/detector pairs on two different dog collars is likewise tricky.

So we've moved on to a new idea, simpler and more personal (neither of us have our own dogs).  The idea is called Cryware and it is an interface to turn physical tears in to computer actions.  Sitting at a computer is most often a solitary act and anymore people spend hours and hours by themselves at their computers.  Email and Facebook and other text-based methods of communications are widely used but can be lacking in emotional conveyance.  Bobby originally proposed a tear catcher that launches a Skype video-call to a loved one upon the detection of a tear.  From there we have gone on to think up other actions a tear should/could trigger on a computer.  We're still nailing down a lot of what will happen when a tear is detected but it could include commenting on an article that has caused an emotional response from the reader/wearer indicating to the original author and other readers just how affecting the article was.

On the implementation side, this interface will be wearable and wireless, so that if you get up from your computer you don't have to remove the technology.  We will accomplish the wireless with two XBees, one worn by the user and the other attached to the user's computer.  Connected to the XBee being worn will be an adhesive flexible tear-activated switch (top right of illustration), when a tear passes over this switch the XBee will send a message to the computer activating a Processing sketch which will either start a Skype call or respond to an article or any number of other actions as desired.

<img src="http://stevenklise.com/itp/2010-fall/pcomp_final_sketch.jpg"/><p class="caption">Illustration by Bobby Genalo</p>

Below is a video of a preliminary test that using tears to activate a switch is indeed possible.  We are using conductive thread in this video.  Before the thread we were using a sponge with leads on each end but once the sponge got wet, the light stayed on and so detecting multiple tears was not possible.  And no, we did not bottle Bobby's tears, we bought artificial tears.

<iframe src="http://player.vimeo.com/video/17421119?byline=0&amp;portrait=0" width="540" height="405" frameborder="0"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date>2010-12-02 21:12:52</wp:post_date>
		<wp:post_date_gmt>2010-12-02 21:12:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>crying-over-spilt-ideas-or-cryware</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pcomp"><![CDATA[PComp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[253257273]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Next Semester&#039;s Classes</title>
		<link>http://l/~sklise/stevenklise.com/itp/next-semesters-classes/</link>
		<pubDate>Fri, 10 Dec 2010 15:40:44 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[Registration just went through.  I'm only in 3 classes right now but those were 3 of my top 4 choices.  Hoping for good things when it comes to waitlist time.  I'm really excited for next semester, done is the time for intro courses.  These are the course descriptions: 

<h2>Big Games</h2>
What happens to games when they escape the boundaries of our tabletops and desktops and VV TV screens and living rooms? From massively multiplayer online games to networked objects that turn the city into a gigantic game grid, new forms of super-sized gaming are expanding at an alarming rate and opening up vast new spaces in which to play. Whether these games are measured in terms of number of players, geographical dimensions, or temporal scope, they represent a new trend in which the "little world" created by a game threatens to swallow up the "real world" in which it is situated. This class is a hands-on workshop that is focused on the particular design problems of large-scale games. In this class students: develop a foundation of basic game design understanding from which to approach the specific issues particular to big games; analyze existing digital and non-digital large-scale games, taking them apart to understand how they work; as interactive systems; and work on a series of design exercises that explore the social, technological, and creative possibilities of large-scale games.

<h2>Digital Imaging: Reset</h2>
Digital cameras and printers are making photography more ubiquitous and more useful than ever. This course is a workshop that looks at changing the rules for capturing and printing digital imagery. By gaining a better understanding of the engineering fundamentals and limitations of digital photography, students can produce breathtaking images with all the benefits of digital media but with an image quality that rivals film. Students experiment using low cost, hands-on tips and tricks in software and hardware to capture high dynamic range, expanded color, night color, 3D, time lapse, and stop motion images using a digital camera and printer. While using mostly off-the-shelf tools, these experiments require students to dig down to see the nitty-gritty of today's and tomorrow's technologies for digitally sensing, encoding, compressing, transmitting and displaying images.

<h2>Reading And Writing Electronic Text</h2>
This course introduces the Python programming language as a tool for reading and writing digital text. This course is specifically geared to serve as a general-purpose introduction to programming in Python, but will be of special interest to students interested in poetics, language, creative writing and text analysis. Weekly programming exercises work toward a midterm project and culminate in a final project. Poetics topics covered include: character encodings (and other technical issues); cut-up and re-mixed texts; the algorithmic nature of poetic form (proposing poetic forms, generating text that conforms to poetic forms); transcoding/transcription (from/to text); generative algorithms: n-gram analysis, context-free grammars; performing digital writing. Programming topics covered include: object-oriented programming; functional programming (list comprehensions, recursion); getting data from the web; displaying data on the web; parsing data formats (e.g., markup languages); and text visualization with Processing. Prerequisites: Introduction to Computational Media or equivalent programming experience.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2010-12-10 15:40:44</wp:post_date>
		<wp:post_date_gmt>2010-12-10 15:40:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>next-semesters-classes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="misc"><![CDATA[Misc.]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[298489849]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Start of a Redesign</title>
		<link>http://l/~sklise/stevenklise.com/itp/the-start-of-a-redesign/</link>
		<pubDate>Wed, 15 Dec 2010 16:06:40 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://stevenklise.com/itp/2010-fall/commlab-redesign.png" alt="redesign screenshot" />

<a href="#">LINK <strong>UPDATE: NO MORE PREVIEW LINK BECAUSE THE NEW SITE IS LIVE, JUST LOOK AROUND</strong></a>

Finally got around to beginning to redesign my website.  Brought to you by CommLab and all the cool content it's given me to put on my site.  Enjoy, but don't expect too much yet.  The full treatment will happen over winter break and once I decide between <a href="http://wordpress.org/">Wordpress</a>, <a href="http://textpattern.com/">Text Pattern</a>, <a href="http://drupal.org/">Drupal</a> or <a href="http://expressionengine.com/">Expression Engine</a>.

So far there is a minimal amount of Javascript via jQuery, but mostly a lot of CSS3 and as close to semantic HTML markup as I could manage.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2010-12-15 16:06:40</wp:post_date>
		<wp:post_date_gmt>2010-12-15 16:06:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-start-of-a-redesign</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="commlab"><![CDATA[CommLab]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring Semester Has Begun</title>
		<link>http://l/~sklise/stevenklise.com/itp/spring-semester-has-begun/</link>
		<pubDate>Sun, 30 Jan 2011 02:42:02 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[The first week of classes is over, it's time to get started on homework.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2011-01-30 02:42:02</wp:post_date>
		<wp:post_date_gmt>2011-01-30 02:42:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring-semester-has-begun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bg"><![CDATA[Big Games]]></category>
		<category domain="category" nicename="dir"><![CDATA[Digital Imaging: Reset]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[260290246]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nature of Code HW01: Recreate a real-world natural motion.</title>
		<link>http://l/~sklise/stevenklise.com/itp/nature-of-code-hw01-recreate-a-real-world-natural-motion/</link>
		<pubDate>Wed, 02 Feb 2011 00:07:58 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[For the first homework assignment in Nature of Code we were asked to recreate a natural motion using limited visual design and attempt to convey a personality on whatever motion we simulate. I chose to make a fish tank where the fish have different degrees of skittishness that determines how reactive they are if the user taps on the virtual glass of the tank. You will notice that some fish will try to swim away from almost every tap while others will only respond when a tap happens very close to their current location.

Another element of the assignment was to limit the use of randomness, or at least the actual <code>random()</code> function. Instead I implemented the <code>nextGaussian()</code> function to give each fish a non-predictable movement though with smoother results than simply using <code>random()</code>.

<img src="http://stevenklise.com/itp/s11_noc/hw01_screenshot.jpg" alt="screenshot of homework 01"/>

<a href="http://stevenklise.com/itp/s11_noc/hw01.php">Launch program.</a>

<a href="https://github.com/stevenklise/S11_NOC/tree/master/hw01">Download the source code on Github</a>.

Update: <a href="http://stevenklise.com/itp/updated-fish-tank/">I've made a 'version 2' of this fish tank.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2011-02-02 00:07:58</wp:post_date>
		<wp:post_date_gmt>2011-02-02 00:07:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nature-of-code-hw01-recreate-a-real-world-natural-motion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[265989131]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Updated Fish Tank]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/updated-fish-tank/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-02-09 16:25:44</wp:comment_date>
			<wp:comment_date_gmt>2011-02-09 16:25:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] the next Nature of Code assignment I&#8217;ve updated the fish tank in a few ways. Most notably being that when a fish approaches an edge of the tank the fish slows [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rebreaker: Simple Text Parsing Program</title>
		<link>http://l/~sklise/stevenklise.com/itp/rebreaker-simple-text-parsing-program/</link>
		<pubDate>Wed, 09 Feb 2011 06:11:45 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://stevenklise.com/itp/s11_rwet/rebreaker.jpg" alt="Screenshot of Rebreaker" />

Rebreaker is a search and replace program. The user provides a text file to the program and then a search string of any character length. Line breaks in the original text are removed and any occurrences of the search string are replaced with new line characters.

The goal was to turn any text, despite it's original form in to a poem-like shape. Of course the size and shape of the text depends on what string the user chooses for which to search.

<a href="http://stevenklise.com/itp/s11_rwet/hw01.zip">Download Python Program</a>

The code:

<pre lang="python"  cssfile="another_style">print ""
print "ReBreaker!"
print ""
print "Enter a source text file and then a"
print "string which will be replaced with carriage returns."

thefile = raw_input('Please enter a txt file name: ')
x = raw_input("Type a string to break: ")

text = open(thefile) # open the input file

result = '' # declare an empty string

for line in text: # iterate through text
	line = line.strip() # remove whitespace
	line = line + ' '
	result += line # append result with this text.
	
result = result.replace(x,'\n') # replace the search term with \n

print result
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2011-02-09 06:11:45</wp:post_date>
		<wp:post_date_gmt>2011-02-09 06:11:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rebreaker-simple-text-parsing-program</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[275626774]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Updated Fish Tank</title>
		<link>http://l/~sklise/stevenklise.com/itp/updated-fish-tank/</link>
		<pubDate>Wed, 09 Feb 2011 16:25:40 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[For the next <a href="http://stevenklise.com/itp/class/s2011/noc/">Nature of Code</a> assignment I've updated the <a href="http://stevenklise.com/itp/nature-of-code-hw01-recreate-a-real-world-natural-motion/">fish tank</a> in a few ways. Most notably being that when a fish approaches an edge of the tank the fish slows down and then turns around as opposed to bouncing off the walls like before. As well, each fish now has a mass that is proportional to their size, I achieved this by adding forces to the fish based on where they are in the window, I at first wanted to give the entire window a vector field, something like:

[pmath] V = -((x-width/2)/(width/2))^7-((y-height/2)/(height/2))^7 [/pmath]

But then I remembered that this only gives the magnitude of the vectors at any given point and not the direction, to get the direction I would need to calculate the derivative of this equation for every single point. In pursuit of figuring this out I realized that flow fields are week 6 material, so I'm going to wait for it though I do believe using a vector field for the entire area will be more efficient than inserting individual invisible attractors or repellers.

The second change was to create the <code>Tap</code> class. Every time the mouse is left-clicked a <code>Tap</code> is generated which is essentially an invisible source of anti-gravity. I'm still trying to dial in the proper amount of force to apply to each tap, right now if you tap too close to a big fish near the edge the fish will leave the frame of the sketch, which is clearly not an ideal behavior.

<script type="application/processing">
// Steve Klise http://stevenklise.com
// Nature of Code, ITP Spring 2011

// Week 02

// Better Fish Tank
// With FORCES
// A 'fish' in a fish tank and a 'finger' tapping the glass.

/*
*	TODO
*	Make fish only rotate a bit.
*	Make castles for fish to hide behind, go to.
*	Make fish avoid each other.	
*/

ArrayList fishes;
ArrayList taps;
float intensity;
float G = 1;

void setup()
{
	size(500,500);
	smooth();
	fishes = new ArrayList();
	taps = new ArrayList();
}

void draw()
{
	// Display stuff
	background(255,255,255);
	noFill();
	stroke(0);
	rect(0,0,width-1,height-1);
	cursor(HAND);

	// The Fish
	if(fishes.size() > 0) // if there are fish
	{
	  for(int i=0; i<fishes.size(); i++) // iterate through all fish
	  {
	    Fish temp = (Fish)fishes.get(i);
	    temp.forces(); // calculate forces on fish.
	    temp.update(); // update movement of fish.
	    temp.display(); // draw the fish to the screen.
	  }
	}
	
	// The Taps
	if(taps.size() > 0) // if there is a tap
	{
		for(int i=0; i<taps.size(); i++) // iterate through all taps
		{
			Tap ttap = (Tap)taps.get(i); // get tap
			ttap.decay(); // decay it
			if(ttap.length <= 0) // if the tap is over
			{
				taps.remove(i); // remove the tap
				//println("TAP DIED");
			}
		}
	}

	// Instructions
	textAlign(CENTER);
	fill(0);
	text("RIGHT CLICK TO SPAWN FISH",width/2,height-30);
	text("LEFT CLICK TO TAP ON GLASS",width/2,height-15);
}

void mouseClicked()
{
	if(mouseButton == LEFT)
	{
		Tap newtap = new Tap(mouseX,mouseY,intensity);
		taps.add(newtap);
		//println("TAP!");
		//println("at "+mouseX+", "+mouseY+" with intensity "+intensity);
	}
	intensity = 0;
}

void mousePressed()
{
	if(intensity == 0)
	{
		intensity = millis();
	}
}

void mouseReleased()
{
	if(mouseButton == RIGHT)
	{
	  PVector currentMouse = new PVector(mouseX,mouseY);
	  Fish temp = new Fish(currentMouse,frameCount%(width/2));
	  fishes.add(temp);
	}
	intensity = constrain(millis()-intensity,0,200);
}
class Tap
{
	// A tap is a repeller of fish that is generated on left mouse clicks and then decays.
	// Time sensitive inverse gravity.
	
	PVector loc; // where the tap happened.
	float length; // how long it will last.
	float mass; // how massive was the tap?
	
	Tap(float _x, float _y, float _mass)
	{
		loc = new PVector(_x,_y);
		mass = _mass; // this isn't written properly, probably.
		length = 100;
	}
	
	void decay()
	{
		length--;
	}
}
class Fish
{
  // MOVEMENT
  PVector location;
  PVector velocity;
  PVector acceleration;
  
  // TRAITS
  float mass;
  float skittishness;
  float topspeed; // a topspeed of each fish, determined by skittishness/mass
  // a big skittish fish will only move a bit.
  // a small skittish fish is going to move more crazily.

  Random yswim; // gaussian movement in y direction
  Random xswim; // gaussian movement in x direction

  float buffer = 30; // distance away from an edge at which the buffer zones start.

  Fish(PVector _location, float _skittishness)
  {
    location = _location; // will be input from right mouse click.
    velocity = new PVector(0,0);
    acceleration = new PVector(0,0);

    mass = map(location.mag(),0,800,1,20); // wherever the fish is spawned at determines how big he gets
    skittishness = _skittishness;
    topspeed = constrain(skittishness/mass,0,1.4);
	yswim = new Random();
    xswim = new Random();
  }

  void forces()
  {
	// If the fish is near the left side of the screen.
	if(location.x < buffer)
	{
		// add a right pointing acceleration if the fish is too close to the left edge.
		PVector dragLeft = new PVector(velocity.mag(),0);
		dragLeft.mult(0.125);
		acceleration.add(dragLeft);
		// println("Slowing down");
	}
	else if (location.x > width-buffer)
	{
		// add a left pointing acceleration if the fish is too close to the right edge.
		PVector dragRight = new PVector(velocity.mag(),0);
		dragRight.mult(-0.125);
		acceleration.add(dragRight);
		// println("Slowing down");
	}
	else if (location.y > height-buffer)
	{
		// add a up pointing acceleration if the fish is too close to the bottom edge.
		PVector dragDown = new PVector(0,velocity.mag());
		dragDown.mult(-0.125);
		acceleration.add(dragDown);
		// println("Slowing down");
	}
	else if (location.y < buffer)
	{
		// add a down pointing acceleration if the fish is too close to the top edge.
		PVector dragUp = new PVector(0,velocity.mag());
		dragUp.mult(0.125);
		acceleration.add(dragUp);
		// println("Slowing down");
	}
    else
    {
      acceleration.x = (float)xswim.nextGaussian();
      acceleration.y = (float)yswim.nextGaussian()/20; // changes in Y should be smaller than X.
      acceleration.normalize(); // Normalize
      acceleration.mult(.03); // Reduce acceleration!
    }
	
	// JUST KEEP SWIMMING, JUST KEEP SWIMMING
	if(acceleration.mag() == 0)
	{
		acceleration.x = (float)xswim.nextGaussian();
	      acceleration.y = (float)yswim.nextGaussian()/20; // changes in Y should be smaller than X.
	      acceleration.normalize(); // Normalize
	      acceleration.mult(.03); // Reduce acceleration!
	}
  }

	void update()
	{
		if(taps.size()>0)
		{
			for(int i=0; i < taps.size(); i++)
			{
				Tap temp = (Tap)taps.get(i);
				isNearby(temp);
			}
		}
		velocity.add(acceleration);
		velocity.limit(topspeed);
		location.add(velocity);
		acceleration.mult(0);
	}

  	void isNearby(Tap atap)
	{
		PVector force = PVector.sub(location,atap.loc); // a vector point from the tap to the fish.
		float distance = force.mag();
		force.normalize(); // normalize that vector, make it just a direction essentially.
		float m = (G * atap.mass * mass) / (distance * distance);
		force.mult(m);
		acceleration.add(force);
	}

  void display()
  {
    fill(0);
    pushMatrix();
    	stroke(0);
	    translate(location.x,location.y);
		float fishHead = constrain(velocity.heading2D(),PI/3,-PI/3);
	    rotate(velocity.heading2D());
	    ellipse(0,0,mass*2,mass);
	    triangle(0-mass,0,0-mass*3/2,0+mass/2,0-mass*3/2,0-mass/2);
	    stroke(255,0,0);
    popMatrix();
    // debug lines
    // line(location.x,location.y,(location.x+velocity.x*90),(location.y+velocity.y*90));
  }
}
</script>

<a href="https://github.com/stevenklise/S11_NOC/tree/master/hw02">Download the source code on Github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2011-02-09 16:25:40</wp:post_date>
		<wp:post_date_gmt>2011-02-09 16:25:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>updated-fish-tank</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[254161000]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Nature of Code HW01: Recreate a real-world natural motion.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/nature-of-code-hw01-recreate-a-real-world-natural-motion/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-02-09 17:32:52</wp:comment_date>
			<wp:comment_date_gmt>2011-02-09 17:32:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Update: I&#8217;ve made a &#8216;version 2&#8242; of this fish tank. [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Update: Rebreaker v.2</title>
		<link>http://l/~sklise/stevenklise.com/itp/update-rebreaker-v-2/</link>
		<pubDate>Fri, 11 Feb 2011 04:42:01 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=490</guid>
		<description></description>
		<content:encoded><![CDATA[Not because I had to but because I wanted to I've updated Rebreaker. The program now takes inputs through <code>sys.argv</code> with the first argument as a filename and the second as the search string. Getting away from the <code>raw_input</code> method allows Rebreaker to be chained with other programs at the command line and is in general a cleaner way of doing things. Aside from structural changes I've also spruced up the presentation, capitalizing the first letter of each line so now the result looks a bit more purposeful, deliberate, not just some mangled text.

<a href="https://github.com/stevenklise/S11_RWET/tree/master/hw01">Download Rebreaker v2 on Github</a>.

<pre lang="python" cssfile="another_style">
#! /usr/bin/env python
# Steven Klise http://stevenklise.com
# RWET Spring 2011, ITP

# Ask for a text file and string.
# Remove all line breaks
# Insert line breaks at occurances of the search string

import sys

if sys.argv[1][-4:] != '.txt':
	print "The first argument must be the name of a txt file"
elif type(sys.argv[2]).__name__ != 'str':
	print "The second argument must be a string"
else:
	result = '' # declare an empty string
	source = open(sys.argv[1])
	replace = sys.argv[2]

	for line in source: # iterate through text
		line = line.strip() # remove whitespace
		line = line + ' '
		result += line # append result with this text.
	
	result = result.split(replace) # replace the search term with \n

	print sys.argv[1].capitalize()
	print ""

	for line in result:
		if len(line) > 0:
			first = line[0]
			first = first.strip();
			rest = line[1:]
			first = first.capitalize();
			line = first + rest
			print line
</pre>

Finally—and this is pretty exciting—I've made a repository for my homework for this class on GitHub which you can see <a href="https://github.com/stevenklise/S11_RWET">here</a>. It may not be the best practice to have a repository of an entire class but it's easier and I'm new to GitHub.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>490</wp:post_id>
		<wp:post_date>2011-02-11 04:42:01</wp:post_date>
		<wp:post_date_gmt>2011-02-11 04:42:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>update-rebreaker-v-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[356768361]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fish Tank, Round 3, Plant Infestation</title>
		<link>http://l/~sklise/stevenklise.com/itp/fish-tank-round-3-plant-infestation/</link>
		<pubDate>Wed, 16 Feb 2011 16:07:28 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=495</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://stevenklise.com/itp/s11_noc/hw03.php"><img src="http://stevenklise.com/itp/s11_noc/hw03_screenshot.jpg" alt="Screenshot" /></a>

<a href="http://stevenklise.com/itp/s11_noc/hw03.php">Launch Fish Tank</a>

<a href="https://github.com/stevenklise/S11_NOC/tree/master/hw03">Download the source code on Github</a>.

For this week I've added seaweed to my fish tank. Each Seaweed plant is a string of anti-gravity pendula, or rather upward-reaching. At the time of writing each Seaweed is assigned a length derived from Perlin noise but each consist of 5 segments. There is still a lot of work to do to make the seaweed look more realistic. Currently they are responding to small random nudges out of equilibrium to keep moving but I want to replace this randomness with a water current.

Also, I'd like the fish to move more like fish do, in schools, in spurts, not as much vertical movement. And to have the fish run in to and affect the seaweed. Looking ahead on the syllabus I see we are about to get in to particle systems and implementing libraries such as <a href="http://toxiclibs.org/">toxiclibs</a> and <a href="http://www.box2d.org/">box2d</a> which will hopefully help with what I'm trying to accomplish.

----

In porting my sketch to Processing.js I ran in to a few snafus. I had just learned about casting <code>ArrayList</code> objects with their type when declaring the variables. For instance <pre lang="java" cssfile="another_style">
ArrayList<Node> nodes;
....
nodes.get(i).display();
</pre>
Instead of 
<pre lang="java" cssfile="another_style">
ArrayList nodes;
....
Node n = (Node)nodes.get(i);
n.display();
</pre>
Processing and Java can recognize the first method but Processing.js seems unable to at version 1.0, which is a more of a nerd bummer than a real issue. (Even the syntax highlighter doesn't seem to recognize <code>ArrayList&lt;Node&gt;</code>!)

Also, I've learned through the help of some classmates that it's necessary to declare the <code>frameRate()</code> at 60 frames per second with Processing.js because the javascript has a way of going faster than the normal 60fps rate when running in Java.

That said I still have a good amount to do to make this fish tank behave more naturally.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>495</wp:post_id>
		<wp:post_date>2011-02-16 16:07:28</wp:post_date>
		<wp:post_date_gmt>2011-02-16 16:07:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fish-tank-round-3-plant-infestation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[269264298]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ibid</title>
		<link>http://l/~sklise/stevenklise.com/itp/ibid/</link>
		<pubDate>Tue, 22 Feb 2011 20:47:40 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=503</guid>
		<description></description>
		<content:encoded><![CDATA[For our second assignment in Reading and Writing Electronic Text we were asked to make a cut-up of one or more texts. The cut-up, in analog form, consists of physically cutting or folding pages and papers of a text and rearranging the pieces. The resulting amalgam is to be read as if it were a text itself. Examples of this that I've read have mostly been unintelligible, gibberish, and rarely engaging.

So for this assignment I wanted to make slightly smarter cut-ups that are in some way deterministic and not solely random rearrangements. However preserving the randomness, or at least subverting the normally expected order of text is essential to creating a cut-up.

<em>Ibid</em> attempts to accomplish both of these, splicing two texts together in a somewhat ordered way though mostly resulting in nonsense. The idea behind <em>Ibid</em> is to add footnotes to a main text from the lines of a secondary text. Any two texts will work, as long as the secondary text is comprised of multiple lines. That said <em>Ibid</em> was designed with poems in mind for the secondary text and journalistic or expository pieces for the main text. The lines of the second text are assigned as notes to sentences that have a word in common, though not a common word (e.g. be verbs, conjunctions, articles and prepositions). Below is my favorite result thus far, adding citations from Carl Sandburg's <a href="http://carl-sandburg.com/killers.htm">Killers</a> to an article about Ray Bradbury from the <a href="http://www.nytimes.com/2009/06/20/us/20ventura.html?_r=1">New York Times</a> (thanks to Pat M. for alerting me to this piece).

I started this project with the notion of taking an explanatory text and further explaining the content with the more expressive lines from a poem. In a sense I wanted to get back at teachers in high school and college that made me make real citations.

Since this program was designed to be used in the terminal, without typesetting, I decided to place the 'footnotes' inline but still use a numbering system. I felt that the act of scrolling up and down in the terminal to read the notes if they had been presented in true footnote fashion would have only taken away from the intended effect. Looking down the page for the first note would have been surprising to find that nothing was explained, however after the first note has been encountered the reader might decide it is not worth the effort to flip through the text for a footnote that only confounds. If later instances of this program are presented in a typeset or printed form I would present the notes as foot or end notes.

<blockquote>
VENTURA, Calif. — When you are pushing 90, have written scores of famous novels, short stories and screenplays, and have fulfilled the goal of taking a simulated ride to Mars, what's left?. ^[1](I AM singing to you.).

"Bo Derek is a really good friend of mine and I'd like to spend more time with her," said Ray Bradbury, peering up from behind an old television tray in his den. ^[2](Soft as a man with a dead child speaks).

An unlikely answer, but Mr. Bradbury, the science fiction writer, is very specific in his eccentric list of interests, and his pursuit of them in his advancing age and state of relative immobility. ^[3](Hard as a man in handcuffs).

This is a lucky thing for the Ventura County Public Libraries — because among Mr. Bradbury's passions, none burn quite as hot as his lifelong enthusiasm for halls of books. His most famous novel, "Fahrenheit 451," which concerns book burning, was written on a pay typewriter in the basement of the University of California, Los Angeles, library; his novel "Something Wicked This Way Comes" contains a seminal library scene. ^[4](And a running of young warm blood in their wrists).

Mr. Bradbury frequently speaks at libraries across the state, and on Saturday he will make his way here for a benefit for the H. ^[5](Held where he cannot move). P. Wright Library, which like many others in the state's public system is in danger of shutting its doors because of budget cuts. ^[6](I wake in the night and smell the trenches).

"Libraries raised me," Mr. Bradbury said. "I don't believe in colleges and universities. ^[7](And hear the low stir of sleepers in lines-). I believe in libraries because most students don't have any money. ^[8](I never forget them day or night). When I graduated from high school, it was during the Depression and we had no money. ^[9](They pound on my heart and I cry back to them). I couldn't go to college, so I went to the library three days a week for 10 years."

Property tax dollars, which provide most of the financing for libraries in Ventura County, have fallen precipitously, putting the library system roughly $650,000 in the hole. ^[10](Sixteen million sleepers and pickets in the dark). Almost half of that amount is attributed to the H. P. Wright Library, which serves roughly two-thirds of this coastal city about 50 miles northwest of Los Angeles.

In January the branch was told that unless it came up with $280,000 it would close. The branch's private fund-raising group, San Buenaventura Friends of the Library, has until March to reach its goal; so far it has raised $80,000.

Enter Mr. Bradbury. While at a meeting concerning the library, Berta Steele, vice president of the friends group, ran into Michael Kelly, a local artist who runs the Ray Bradbury Theater and Film Foundation, a group dedicated to arts and literacy advocacy. ^[11](And a red juice runs on the green grass). Mr. Kelly told Ms. Steele that he could get Mr. Bradbury up to Ventura to help the library's cause.

On Saturday, the two organizations will host a $25-a-head discussion with Mr. Bradbury and present a screening of "The Wonderful Ice Cream Suit," a film based on his short story of the same name.

The fund-raiser's financial goal is not a long-term fix. That would come only if property taxes crawl back up or voters approve a proposed half-cent increase in the local sales tax in November, some of which would go to libraries. ^[12](Fixed in the drag of the world's heartbreak).

Fiscal threats to libraries deeply unnerve Mr. Bradbury, who spends as much time as he can talking to children in libraries and encouraging them to read. ^[13](They beat on my head for memory of them).

The Internet? Don't get him started. "The Internet is a big distraction," Mr. Bradbury barked from his perch in his house in Los Angeles, which is jammed with enormous stuffed animals, videos, DVDs, wooden toys, photographs and books, with things like the National Medal of Arts sort of tossed on a table.

"Yahoo called me eight weeks ago," he said, voice rising. "They wanted to put a book of mine on Yahoo! You know what I told them? 'To hell with you. To hell with you and to hell with the Internet. ^[14](To their homes and women, dreams and games).'

"It's distracting," he continued. "It's meaningless; it's not real. It's in the air somewhere."

A Yahoo spokeswoman said it was impossible to verify Mr. Bradbury's account without more details.

Mr. Bradbury has long been known for his clear memory of some of life's events, and that remains the case, he said. ^[15](Some of them long sleepers for always). "I have total recall," he said. "I remember being born. I remember being in the womb, I remember being inside. Coming out was great."

He also recalled watching the film "Pumping Iron," which features Gov. Arnold Schwarzenegger in his body-building days, and how his personal recommendation of the film for an Academy Award helped spark Mr. Schwarzenegger's Hollywood career. He remembers lining his four daughters' cribs with Golden Books when they were tiny. And he remembers meeting Ms. ^[16](And a red juice soaks the dark soil). Derek on a train in France years ago.

"She said, 'Mr. Bradbury.' I said, 'Yes.' She said: 'I love you! My name is Bo Derek.'"

Ms. Derek's spokeswoman, Rona Menashe, said the story was true. She said her client would like to see some more of Mr. Bradbury, too.

Mr. Bradbury's wife, Maggie, to whom he was married for over five decades, died in 2003. He turns 89 in August.

When he is not raising money for libraries, Mr. Bradbury still writes for a few hours every morning ("I can't tell you," is the answer to any questions on his latest book); reads George Bernard Shaw; receives visitors including reporters, filmmakers, friends and children of friends; and watches movies on his giant flat-screen television.

He can still be found regularly at the Los Angeles Public Library branch in Koreatown, which he visited often as a teenager.

"The children ask me, 'How can I live forever, too?' " he said. "I tell them do what you love and love what you do. ^[17](Some of them tumbling to sleep to-morrow for always). That's the story on my life."
</blockquote>


<pre lang="python" cssfile="another_style"># Ibid
# Steven Klise <http://stevenklise.com>
# Reading & Writing Electronic Text, ITP 2011

# Ibid takes two texts as inputs and splices the second text in as 'footnotes' where similarities in the two texts occur.
# Ideal input would be a dry main text and a poem as the footnote text.
# Since the output will likely be in the terminal and not a type setting program I need to determine how to format the footnote insertion.

import sys, string

footcount = 1 # No footnotes have been made yet.
smallwords = set(['a','an','the','and','but','or','both','else','yet','am','is','are','was','were','have','has','had','do','does','did','can','could','will','would','shall','should','may','might','must','be','been','being','of','on','to','from','for','as']) # Words to ignore when deciding where to put footnotes.
# punctuation = set(['.',',',';',':','/','\\','(',')','?','!','"','\''])
poem_words = dict()
noteslist = [] # The note text as a list
mainlist = [] # The main text as a list
output = '' # output is empty.

main = open(sys.argv[1]) # The first filename is the main text.
notes = open(sys.argv[2]) # The second filename is used for the notes.

# Turn the Main text into a list.
for line in main:
    line = line.strip()
    if line[:1] != '#':
        mainlist.append(line)

it = 0
for line in notes: # Iterate through the notes file.
    if line[:1] != '#': # Remove lines that are Comments
        line = line.strip() # Remove whitespace.
        if line[-1:] in string.punctuation:
            noteslist.append(line[:-1])
        else:
            noteslist.append(line+'.') # Add the line to a list of the lines.
        oneline = line.split(" ") # split the line at spaces
        oneline = [''.join(c for c in s if c not in string.punctuation) for s in oneline] # Remove punctuation.
        oneline = [c for c in oneline if c] # Remove empty strings.
        oneline = [w for w in oneline if w not in smallwords] # Remove words that are in 'smallwords'
        for word in oneline: # If the word is already in poem_words, concat the line number
            if word in poem_words:
                poem_words[word] += ","+str(it)
            else: # Else add the word and its line number
                poem_words[word] = str(it)
        it+=1 # Increment my iterator number.

for line in mainlist:
    sentences = line.split('.') # Split each 'line' (paragraph) into dumb sentences
    line = '' # erase line, otherwise paragraphs get doubled.
    for sen in sentences: # Iterate through the sentences.
        if sen != '' and sen[:-1] not in string.punctuation:
            sen += '.'
        noted = False # This sentence has not gotten a note yet.
        ws = sen.split(' ') # split the sentence in to words.
        for w in ws:
            if w in poem_words:
                # Find a non-empty noteslist line with the word.
                lines = poem_words[w].split(',') # the lines in the notes where 'w' happened.
                for num in lines: # Each line where 'w' happened.
                    if noteslist[int(num)] != '' and noted == False:
                        noted = True # Don't allow multiple notes for the same sentence.
                        sen += " ^["+str(footcount)+"]("+noteslist[int(num)]+")." # Add the note.
                        noteslist[int(num)] = '' # You've used this line of the notes, erase it.
                        footcount+=1 # Increment the note number.
        line += sen
    # Make paragraph breaks apparent.
    if line == '':
        line = '\n\n'
    output += line # One string of everything.
    
print output</pre>

<a href="https://github.com/stevenklise/S11_RWET/tree/master/hw02p">Download the source code at Github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2011-02-22 20:47:40</wp:post_date>
		<wp:post_date_gmt>2011-02-22 20:47:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ibid</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[246281341]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Christmas games, Christmas Hangman, Christmas Jumble, word games]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://playhangmangames.com/hangman/christmas-word-games_46.html</wp:comment_author_url>
			<wp:comment_author_IP>89.36.21.242</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 14:00:46</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 14:00:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] therefore the children can be learning while they have a great time!  On this subject see: http://stevenklise.com/itp/ibid/   Tags: Christmas games, Christmas Hangman, Christmas Jumble, word [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Eat this 5 poems &laquo; Flotsam Projects]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://itp.will-jennings.com/archives/5</wp:comment_author_url>
			<wp:comment_author_IP>75.125.121.236</wp:comment_author_IP>
			<wp:comment_date>2011-02-23 23:32:46</wp:comment_date>
			<wp:comment_date_gmt>2011-02-23 23:32:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] took some of Steve Klise&#8217;s Ibid chop up ideas and also removed all auxiliary verbs and some words relating to caring, coveting, [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Feeding the Fish Tank</title>
		<link>http://l/~sklise/stevenklise.com/itp/feeding-the-fish-tank/</link>
		<pubDate>Sat, 26 Feb 2011 01:03:52 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=517</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://stevenklise.com/itp/s11_noc/hw04_screenshot.jpg" alt="Fish tank with food" />

My fish tank is getting smarter (though less green). Are you hungry? Stay hungry. The fish are now hungry as well. The latest lesson was about <a href="http://www.shiffman.net/teaching/nature/particles/">particle systems</a> and how to implement them in the Processing environment. Instead of making the movements of my Seaweed objects more realistic I decided to move on to sprinkling bits of food for the fish to eat, also tapping on the glass to agitate the fish was also starting to agitate me.

Pressing the left mouse button now sprinkles flakes of food into the tank. The food falls through the water along a flow field that is randomly generated each time the program is launched. If a flake of food hits the ground it becomes a piece of Detritus and the details about its shape are transfered from the <code>ArrayList</code> of Food particles to a <code>Detritus</code> object which is an inanimate object. This allows the food to stay on the screen but not take up computing power and also no longer be a target for the fish. Speaking of the fish, whenever there is a piece of food in the tank the fish look for whichever piece is closest and swim towards that piece to eat it. Each fish has a variable tracking their hunger which decreases with each flake of food consumed. A fish's hunger increases every 120 frames by one flake and can reach a maximum of 10 flakes.

This week the program is running through a Java applet and not natively with Processing.js because I'm taking advantage of Java's <a href="http://en.wikipedia.org/wiki/Generics_in_Java">generics</a> that have just recently gotten support in Processing but have yet to hit the Javascript implementation.

<a href="http://stevenklise.com/itp/s11_noc/noc_hw04/">Launch the applet</a>

<a href="https://github.com/stevenklise/S11_NOC/tree/master/hw04">Source on Github</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>517</wp:post_id>
		<wp:post_date>2011-02-26 01:03:52</wp:post_date>
		<wp:post_date_gmt>2011-02-26 01:03:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>feeding-the-fish-tank</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[245015928]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Midterm Proposal: Poems for Computers</title>
		<link>http://l/~sklise/stevenklise.com/itp/midterm-proposal-poems-for-computers/</link>
		<pubDate>Mon, 28 Feb 2011 05:16:21 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=532</guid>
		<description></description>
		<content:encoded><![CDATA[After two homework assignments and a fair amount of reading of generative texts I've found it a bit incongruous that computers are making poems for humans to read. Each piece I've read raises the question: "Is there any meaning behind this, and does it matter?" Though maybe the problem isn't that computers shouldn't make poetry but rather that computers are making poetry for the wrong audience, humans. For the midterm project I'm going to make a computer program, a bard, who will write poems for other computers to read. The poems will need to be in a language that computers can understand, and computers don't understand English but they do understand Python. If the age of artificial intelligence is coming then we might be approaching a time when computers can appreciate poetry, let's give them their own poetry.

A few questions arise that must be addressed for this undertaking before I start programming. What would make a Python program poetic? Can poetic coding be produced that also runs? How will I know if the computer 'enjoyed' or 'appreciated the poem, what type of feedback is necessary if any? Will these poems be readable by humans? This last question is maybe the most important currently as part of the assignment requires that I read one of the poems when presenting the project.

<h3>Poetic Code</h3>
What attributes distinguish poetry from other forms of text and how can these attributes be translated to the writing of a script? Rhyme is the first attribute of poems that comes to mind, it might also be the hardest to translate into code. Rhymes are lines that end with similar sounds, not meaning but phonics. A computer (aside from the <code>say</code> command in the terminal) has no idea about the pronunciation of words and thus would not understand a set of code crafted specifically to rhyme. Likewise meter, iambic pentameter and such, would be entirely unacknowledged by a computer that reads byte by byte. Maybe the only way to fore a computer into a metered reading of code would be to create computationally difficult blocks coupled with 'easier' blocks to artificially slow down the 'reading'.

The use of refrain in poetry could quite easily be translated in to code by repeating the same lines. The effect on the program would vary if the repeated lines were static variable declarations such as <code>x = "string"</code> or computational lines such as <code>z = z+x</code>. The repetition in the first example would in the end be ignored by the computer, it would get read twice but would have no real effect on the computer's understanding or interpretation of the script. That said, what is the purpose of refrain and will a computer even know?

One other thought I've had is including variable declarations or function definitions that are never implemented by the script. If being non-utilitarian is an attribute of poetry then this would be an implementation of uselessness.

And use of whitespace and line breaks in poetry are obviously incompatible with Python. Thus the order and size of code blocks are the only shape aspects possible to play with when writing a script as a poem.

<h3>Feedback</h3>
These poems will be Python scripts and will be read by being run on the command line. Should there be any response from the computer after completing a reading? What would it be? An analysis of what the poem means? An interpretation of how the computer 'feels'? How would any of this be illustrated? Maybe each computer-as-reader will have an image and by reading the poem the image is in some way manipulated. Would this make the poem simply a photo editor or could it be a representation of the content of the poem?

Another option would be to make all of the poems <a href="http://en.wikipedia.org/wiki/Quine_(computing)">quines</a> which are self-replicating programs. So running the script both reads the poem to the computer and to the user. I wrote a quick quine in Python:

<pre lang="python" cssfile="another_style">
import sys
x = open(sys.argv[0])
for line in x:
	print line,
</pre>

<h3>First Steps</h3>
With all of this in mind I will focus first on writing a bard program to produce other Python scripts. Starting with something as simple as the above quine with randomized elements and then scaling up to more complex and possibly more thematic scripts.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>532</wp:post_id>
		<wp:post_date>2011-02-28 05:16:21</wp:post_date>
		<wp:post_date_gmt>2011-02-28 05:16:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>midterm-proposal-poems-for-computers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[246395236]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Supernovae: Nature of Code Midterm Idea</title>
		<link>http://l/~sklise/stevenklise.com/itp/supernovae-nature-of-code-midterm-idea/</link>
		<pubDate>Thu, 03 Mar 2011 16:29:57 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=537</guid>
		<description></description>
		<content:encoded><![CDATA[I've hatched an idea for my Nature of Code midterm assignment. My fixation with <a href="http://thisisouterspace.com">space</a> is finally finding its way into my homework. The end goal is to make stars that exist for a time and then explode in huge supernovae. Though I'm looking at a little less than a week to make this happen so simply modeling/faking solar flares will be exciting enough. The two main technologies I'm hoping to learn with this assignment are <a href="http://toxiclibs.org">toxiclibs</a> and openGL. Below is the current state of my outline for the project as posted on <a href="https://github.com/stevenklise/NOC_Supernovae">Github</a>.
<h3>Supernovae Outline</h3>
A star is on the screen, either in 3D or just with some openGL blending. Hitting the space bar starts a 'supernova' event.

The star is converted from a single <code>Star</code> object with a mass into a number of smaller items, debris, flares, small stars, comets that add up to some scalar fraction of the star's mass.

The <code>Star</code> shrinks to a radius of 0. And the new pieces are then spawned all at the exact same space. However they have box2D (so I guess this won't be in 3D) and explode out from the center because things can't be on top of each other and they all have a repulsion.

If I can just get a star to oscillate and flare like a sun that would be amazing.
<h4>Game Plan</h4>
<ol>
	<li>Make <code>Star</code> object that is a sphere.</li>
	<li>Give the <code>Star</code> a texture either through a toxiclibs mesh or some other OPENGL blending commands. Color stars based on their sizes.</li>
	<li>Create <code>Flare</code> object based on Shiffman's chain. A <code>Flare</code> is more than a chain in the following:
<ul>
	<li>Spontaneously (read: randomly) generated on the surface of a <code>Star</code>.</li>
	<li>Degrades over time, does not keep swinging.</li>
	<li>Can break apart into multiple chain pieces.</li>
	<li>Exists in 3D space. Though for convenience might 'be in 3D' but only move on a 2D plane.</li>
</ul>
</li>
	<li>Supernova Event
<ul>
	<li><code>Star</code> shrinks in size to a radius of 0.</li>
	<li>Once at r=0, <code>Star</code> object is removed and in its place are a ton of debris of various shapes and sizes.</li>
	<li>Debris is forced outward, either adding in box2D or simply huge acceleration vectors.</li>
</ul>
</li>
</ol>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>537</wp:post_id>
		<wp:post_date>2011-03-03 16:29:57</wp:post_date>
		<wp:post_date_gmt>2011-03-03 16:29:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>supernovae-nature-of-code-midterm-idea</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[244760905]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nature of Code Midterm: Supernovae</title>
		<link>http://l/~sklise/stevenklise.com/itp/nature-of-code-midterm-supernovae/</link>
		<pubDate>Wed, 09 Mar 2011 14:45:08 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=540</guid>
		<description></description>
		<content:encoded><![CDATA[![Supernovae Screenshot](http://stevenklise.com/itp/s11_noc/supernovae_midterm/supernovae.png)
<a href="http://stevenklise.com/itp/s11_noc/supernovae_midterm">Launch Supernovae Applet</a>.

<a href="https://github.com/stevenklise/NOC_Supernovae">Download source from Github</a>.

*Supernovae* in its current stage is a single star shooting out solar flares. Each flare starts out attached to the surface of the sphere from both ends, with the tail releasing to give a nice arc shape to the flare. Just like real flares as well, this model's flares will break apart and fade out over time.

### The `Star` Object
The star itself is a 2D png texture with a radius and an `activity` level: a number between 0 and 1 indicating the probability that a new flare will arise. Currently the `Star` is very simplistic and merely a context in which to view the `Flares`. As I continue to work on this project there will be more `Star` objects that will rotate and orbit around one another. Furthermore each `Star` will have a lifespan at the end of which it will explode in a supernova (hence the title of this piece) shooting flares and debris out in to the system.

### The `Flare` Object
This is where things get more complicated. In first thinking about a solar flare I knew I would need a bunch of particles attached in a line by springs and however I assembled this I needed to be able to break apart this string at any point but maintain the movement of all of the pieces. After a little bit of messing around attempting to make my own structure I discovered the `ParticleString` from [toxiclibs](http://toxiclibs.org). The `ParticleString` is defined by an initial location, a number of particles, mass for each particle, a spring strength and finally a vector to indicate the distance and direction between each particle. With all of this already done I decided to extend the `ParticleString` and add one more parameter which I called `stability` which was a probability that the `Flare` would break apart.

I also gave each `Flare` a `lifespan` which is a random integer that indicates how many frames a `Flare` will last until it fades out and is destroyed. Currently the `Flares` are moving pretty close to how I would like them to except that they tend to reach an equilibrium fully-extended position where they stop moving. Moving forward my best guess to counteract this is to add some environment currents or other invisible attractors and repellers in the space to prevent any particles from slowing down.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>540</wp:post_id>
		<wp:post_date>2011-03-09 14:45:08</wp:post_date>
		<wp:post_date_gmt>2011-03-09 14:45:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nature-of-code-midterm-supernovae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[249481407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading &amp; Writing Electronic Text Midterm: Poetic Automaton</title>
		<link>http://l/~sklise/stevenklise.com/itp/reading-writing-electronic-text-midterm-poetic-automaton/</link>
		<pubDate>Wed, 09 Mar 2011 22:29:35 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=545</guid>
		<description></description>
		<content:encoded><![CDATA[![Sneaker](http://stevenklise.com/itp/s11_rwet/sneaker.png)

As a midterm assignment in Reading &amp; Writing Electronic Text we were asked to create a new poetic form and to write a program in Python that generates poems of this type.

I’m calling the poetic form I made the <em>Automaton</em> after the <a href="http://atlas.wolfram.com/01/01/views/3/TableView.html">elementary cellular automata</a> from which this poem takes its form. By elementary I mean one-dimensional and by cellular automaton I mean a model of discrete ‘cells’ that have a state of either on or off which is determined according to a specified rule by the states of the neighboring cells. In most models cells are depicted as black or white squares, for the <em>Automaton</em> I’ve swapped the squares with words and white space. An initial word and one of the 256 rules are required to start writing an <em>Automaton</em> poem. Once the word and rule are chosen the writer creates successive lines (as many as he or she desires) according to the chosen rule. Each new word in the poem must have an alphabetically-identical syllable as one of the words on the previous line that is to the left right or directly above the new word. For example if a line has the following:
<pre lang="text"> ______     el-e-phant	chick-en
         NEW WORD</pre>
So the NEW WORD must contain either ‘el’, ‘e’, ‘phant’, ‘chik’ or ‘en’.
The resulting poem focuses much more on the generative form and structure than content or narrative. That said there is a lot of freedom as there are 256 different rules some of which yield chaotic patterns.
Before I describe the code here are a few examples of some <em>Automaton</em> poems generated with my <em>Poetic Automaton</em> program:

### Three Poems:
#### sunburn in 4/54
<pre style="width: 900px;" lang="text">                                          sunburn                                          
                             mowburn    mowburning    burnooses                            
                 burn                                             esemplastic              
     keb       reutters    bilingually                haplontic  schematizations    tictac</pre>
#### formatted in 6/188
<pre style="width: 900px;" lang="text">                                                                formatted                                                                
                                                             delegitimations    tedier                                                  
                                                               cogitate                     erk                                         
                                                              gastritides  encrimsons   terrifiers   exacerbate                         
                                                             colorimetries archaeometries   lacrimal                    bates           
                                                              calorimeter  vaporimeter                 bamming   inefficacies    beetled</pre>
#### rubrick in 6/30
<pre style="width: 900px;" lang="text">                                                                    rubrick                                                                    
                                                     subchanter   umbrellaing  rainmaking                                                      
                                         enchanter   trochanters                            ingeminated                                        
                           trochanter   trochanter                 twentieth    bedabbled    geminies      educate                             
               classist   experienceless                            martialness                                        categorising              
 discursist   persistence                 lessors   gloriousness substantially     ness                    siruping    barnstormer ingrainednesses</pre>
The poems <em>Poetic Automaton</em> has written range from utterly non-sensical to mostly non-sensical. Of course I did expect this, I was more interested in the structural form of the poem though I see now that a poem without a real focus on words is just a mess in a certain shape.

As well something is clearly amiss in my code such that some words have nothing in common with the syllables of their parents. I used a <a href="http://nedbatchelder.com/code/modules/hyphenate.html">port of the hyphenation algorithm</a> that Frank Liang originally developed for LaTeX (a really great typesetting markup language for math papers, as well as everything else). Liang’s algorithm never splits a word in the wrong place however according to the documentation the algorithm may miss some syllable breaks. I set the program to split a word into its individual letters if there were no syllable breaks, a poor decision it seems, especially combined with the use of the SOWPODS wordlist which has resulted in a lot of long strange words.

In the next few weeks of class we will be covering Markov chains and n-gram analysis, having just read a bit more on this topic I think a better approach to <em>Automaton</em> poetry would be to have every new word a 1, 2, or 3-gram result. Stay tuned for updates.

<a href="https://github.com/stevenklise/RWET_PoeticAutomaton">Download Poetic Automaton from Github.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>545</wp:post_id>
		<wp:post_date>2011-03-09 22:29:35</wp:post_date>
		<wp:post_date_gmt>2011-03-09 22:29:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reading-writing-electronic-text-midterm-poetic-automaton</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[249853865]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Poetic Automaton: Markov Edition]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/poetic-automaton-markov-edition/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-04-06 19:01:16</wp:comment_date>
			<wp:comment_date_gmt>2011-04-06 19:01:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[...] week for Reading &amp; Writing Electronic Text I reimplemented Poetic Automaton with lines generated by Markov Chain and n-gram analysis of the parent cells. The program uses [...]</p>
]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Conway&#039;s Game of Life</title>
		<link>http://l/~sklise/stevenklise.com/itp/conways-game-of-life/</link>
		<pubDate>Thu, 31 Mar 2011 21:37:25 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=569</guid>
		<description></description>
		<content:encoded><![CDATA[Last week I was reading an article about John Conway's Game of Life from the <a href="http://ddi.cs.uni-potsdam.de/HyFISCH/Produzieren/lis_projekt/proj_gamelife/ConwayScientificAmerican.htm">September 1970 issue of Scientific American</a>, while reading I got frustrated that almost all instances of the GoL on the web are Java applets so I decided to make my own instance of the game in Processing.js with the <code>canvas</code> element.

<a href="http://conway.stevenklise.com/"><img src="http://stevenklise.com/projects/conways/screen-654.png" alt="screenshot"/></a>

<a href="http://conway.stevenklise.com/">Play Conway's Game of Life</a>

The app allows for free drawing as well as the placement of some of well known interesting patterns. The source code for this project is available on <a href="https://github.com/stevenklise/ConwaysGameOfLife">Github</a>. The Processing.js script will not run by itself and requires the entire Sinatra app. I've ported the app into the desktop Processing which is available in <a href="https://github.com/stevenklise/ConwaysGameOfLifeDesktop">this repository on Github</a>. The desktop version is a few features short of the browser version as the button interface is a bit more cumbersome without HTML.

Enjoy! And keep checking back as more patterns and more features will be added soon.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>569</wp:post_id>
		<wp:post_date>2011-03-31 21:37:25</wp:post_date>
		<wp:post_date_gmt>2011-03-31 21:37:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conways-game-of-life</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Nature of Code Final Proposal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/nature-of-code-final-proposal/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-04-13 15:58:03</wp:comment_date>
			<wp:comment_date_gmt>2011-04-13 15:58:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[...] chops to do something about it. However, aside from reimplementing cellular automata with words or natively in the browser without a super computer and PhD I&#8217;m not going to contribute any new findings to this [...]</p>
]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Nature of Code Final Proposal</title>
		<link>http://l/~sklise/stevenklise.com/itp/nature-of-code-final-proposal/</link>
		<pubDate>Wed, 13 Apr 2011 15:55:38 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=573</guid>
		<description></description>
		<content:encoded><![CDATA[<del>I've become obsessed with cellular automata. Maybe I always have been but now I have the programming chops to do something about it. However, aside from reimplementing cellular automata with <a href="http://stevenklise.com/itp/poetic-automaton-markov-edition/">words</a> or <a href="http://stevenklise.com/itp/conways-game-of-life/">natively in the browser</a> without a super computer and PhD I'm not going to contribute any new findings to this field.</del>

<del>Alright, so let's add in steering behaviors and genetic algorithms. Just for yucks? To see what shakes out and attempt to make my own ecosystem.</del>

<img src="http://stevenklise.com/itp/s11_noc/drawshape.png" alt="screen capture of shape drawing" />
<p class="caption">A preliminary sketch of how a user will design a new shape to the program</p>
<del>The as-yet-untitled project will be web based and will consist of organisms created by visitors to the website. A visitor will have the option to draw a shape of a color of their choice. Upon submission this shape will be turned in to an organism with traits based on the length of its perimeter and its number of edges. The traits will manifest as variations in steering behaviors: will this organism avoid others of its type or clump together, how will this organism interact with other species. Aside from steering each species of organism will have its own conditions for death and birth: how many neighboring organisms are too few or too many or just right, also will the species be predisposed to cross-breed? As opposed to a one-organism-per-cell setup as seen in cellular automata I will use a bin-lattice subdivision and consider all organisms in a given square for birth and death. This will allow the organisms to move fluidly yet still act as a pseudo-cellular automata. When a birth event occurs there will be the possibility of cross-species breeding which will blend colors and shapes and traits.</del>

<del>It will be interesting to see, as there is no way to predict, if an equilibrium amongst species is reached or if one species dominates or if over time all the species blend together to a dull gray circle.</del>

<del>At this stage I've mostly settled on the concept but am unsure exactly how the web-based-interactivity will work. Will I be able to run the simulation entirely on a server, will every user on every computer always see the exact same movements and if not how will I reconcile different outcomes into a general state to be stored on the server?</del>

The visual design is also currently up in the air however the following list are some design cues I hope to follow:

<a href="http://www.todayandtomorrow.net/2011/02/15/a-sequence-of-lines-consecutively-traced-by-five-hundred-individuals/">Sequence of traced lines</a>

<a href="http://butdoesitfloat.com/1088276/New-Maps-of-Hyperspace">Scanner experiments by Leanne Eisen</a>

<a href="http://butdoesitfloat.com/1204628/They-wanted-what-is-possible-only-once-the-now">CRT Monitors captured by Stephan Tillmans</a>

<a href="http://butdoesitfloat.com/1241316/I-have-no-special-message-I-wish-I-did-It-would-be-great-if-I-had">Ballpoint pen drawings by IL LEE</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>573</wp:post_id>
		<wp:post_date>2011-04-13 15:55:38</wp:post_date>
		<wp:post_date_gmt>2011-04-13 15:55:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nature-of-code-final-proposal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[278500022]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Poetic Automaton: Markov Edition</title>
		<link>http://l/~sklise/stevenklise.com/itp/poetic-automaton-markov-edition/</link>
		<pubDate>Wed, 06 Apr 2011 18:59:33 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=576</guid>
		<description></description>
		<content:encoded><![CDATA[<pre lang="text" style="width: 900px;">
             we                        play         sports                                                                        
hear         called                    sports                    surprise                                                         
called                                 one                       right,       courage                                the          
             matrix.”   his          of                        courage                   his          maybe        called       
             his                                                 do                        maybe                                  
are          especially   (which                    every        every                     height.      height.                   
especially                                          every                                  height.                                
you’ve     the                       wimbledon.   on           which        background,  way          movements    the          
                                       on                                                                                         
                          fact         net          still                                                                         
             the          net                                    so                                                               
forward      an                        least        into         in           and                                                 
an                                     into                                                topspin                   slice        
             that         first        and          men’s                   revealing    pro                       an           
             a                                                                pro                                    that         
             was          like                                   be           of           pretty       also         here         
             out                       but          at           of                                                               
and          to                        at                                     beings’                                           
male                                   in           the          with         with         with                      journalism.  
             only         impossibility anecdote.                                                                     male   
</pre>

This week for <a href="http://stevenklise.com/itp/class/s2011/rwet/">Reading & Writing Electronic Text</a> I reimplemented <a href="http://stevenklise.com/itp/reading-writing-electronic-text-midterm-poetic-automaton/">Poetic Automaton</a> with lines generated by Markov Chain and n-gram analysis of the parent cells. The program uses 1,2,3-gram analysis based on how many of the three parent cells are occupied for a word and then using Markov chaining spits out what the next word would be. The above example used David Foster Wallace's article <a href="www.nytimes.com/2006/08/20/sports/playmagazine/20federer.html?_r=2&pagewanted=all">"Roger Federer as Religious Experience"</a> as a source text.

The use of n-gram analysis as opposed to syllable level parsing has resulted in more readable poems.

Source code available on <a href="https://github.com/stevenklise/RWET_PoeticAutomaton">Github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>576</wp:post_id>
		<wp:post_date>2011-04-06 18:59:33</wp:post_date>
		<wp:post_date_gmt>2011-04-06 18:59:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>poetic-automaton-markov-edition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[273217456]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[ITPlog &raquo; Nature of Code Final Proposal]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://stevenklise.com/itp/nature-of-code-final-proposal/</wp:comment_author_url>
			<wp:comment_author_IP>75.119.219.95</wp:comment_author_IP>
			<wp:comment_date>2011-04-13 15:55:45</wp:comment_date>
			<wp:comment_date_gmt>2011-04-13 15:55:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[...] chops to do something about it. However, aside from reimplementing cellular automata with words or natively in the browser without a super computer and PhD I&#8217;m not going to contribute any [...]</p>
]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Last Accessed / Last Modified</title>
		<link>http://l/~sklise/stevenklise.com/itp/last-accessed-last-modified/</link>
		<pubDate>Mon, 09 May 2011 19:26:56 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=595</guid>
		<description></description>
		<content:encoded><![CDATA[	# Good Evening
	 this this I wrote this I wrote I wrote this is a poem
	 It's been 3 day and 21  hours
	 The poem might be five lines.
 

	# Last accessed 2011-05-06 18:29:08
	# This is not BROOKLYN
	    There the sun rises at 5:46 am.
	# This is not RUDOLPH
	    Their sun will rise at 5:42 am.
	# This is not DODGE
	    It would be Partly Cloudy
	# This is not BLACK RIVER FALL
	    Their sun will rise at 5:46 am.
	# This is not MOUNT VERNON
	    Mostly Cloudy would be the weather.
	# This is not TIPPECANOE
	    Mostly Cloudy would be the weather.
	# This is not BLOOM CITY

	# This is not CHICAGO
	    It would be Mostly Cloudy
	# This is not VICTORY
	    There the sun rises at 5:48 am.
	# This is not MOUNT VERNON
	    Mostly Cloudy would be the weather.
	# This is not WOOSTER
	    It would be Partly Cloudy
	# This is not GAMBIER
	    It would be Partly Cloudy
	# This is not BRONX
	    There the sun rises at 5:46 am.
	# This is not STATEN ISLAND
	    It would be Mostly Cloudy
	# This is not CHICAGO
	    It would be Mostly Cloudy
	# This is not WOOSTER
	    There the sun rises at 6:18 am.
	# This is not GAMBIER
	    Their sun will rise at 6:22 am.
	# This is not TIPPECANOE
	    Mostly Cloudy would be the weather.
	# This is not VICTORY
	    Mostly Cloudy would be the weather.
	# This is not ASTORIA
	    It would be Light Rain
	# This is not DODGE
	    There the sun rises at 5:50 am.
	# This is not VICTORY
	    Their sun will rise at 5:48 am.
	# This is not WOOSTER
	    Their sun will rise at 6:18 am.
	# Here we are in NEW YORK
	    It will get dark at 7:55 pm
	# Last modified 2011-05-06 10:19:30


The specifications for the final in Reading & Writing Electronic Text were to perform a text generated by a Python program. My previous homeworks are not well suited to reading aloud, on these I focused mostly on structure and form and not readability.

_Last Accessed / Last Modified_ is an attempt at having a computer communicate its ability to perceive its surroundings with a human reader through a poem. So what is a poem to a computer? What methods in Python are 'poetic'? In my mind it's recursion and the random() function. In recursion there is refrain, the block of code runs over and over, but also there is self-reference, each time a recursive method runs its input is the previous run's output. As for randomness, every action a computer performs is specified by a human, thus the only real choice a computer has is what number to spit out when prompted with random(). Neither of these two methods make a computer truly expressive but until a computer becomes self aware I think these are good approximations.

With those methods chosen, what will the program write? Information about the Python file itself as well as the current state of the computer seemed an obvious first step. The poem begins with an introduction, chosen from a context free grammar like process though the words in use are chosen to always result in a similar attitude of greeting. The computer will tell the reader when the file was last accessed and how long the computer has been awake, as well as a 'guess' of sorts to how long the poem might be.

After the introduction, the computer chooses a candidate zip code from a text file and checks the candidate against a predefined zip code of the current location. If the two zips do not match a comment on the current weather at the proposed zip code is printed and the function runs again and again until the correct zip code is chosen. The time of sunset at the current location ends the poem.

_Last Accessed / Last Modified_ is all artifice. It is human written code crafted to create output to illicit a computer's poetics. That it is impossible to have a computer write its own poetry is a logical conclusion though in my mind does not detract from the poems this program creates.

[Source Code available on Github](https://github.com/stevenklise/LastAccessedLastModified)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>595</wp:post_id>
		<wp:post_date>2011-05-09 19:26:56</wp:post_date>
		<wp:post_date_gmt>2011-05-09 19:26:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>last-accessed-last-modified</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rwet"><![CDATA[Reading &amp; Writing Electronic Text]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[299474682]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Clumpers</title>
		<link>http://l/~sklise/stevenklise.com/itp/clumpers/</link>
		<pubDate>Tue, 17 May 2011 19:39:13 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=603</guid>
		<description></description>
		<content:encoded><![CDATA[_FlockingClumps is an experiment of combining flocking behaviors with cellular automaton like rules without discrete boundaries between organisms._

<iframe src="http://player.vimeo.com/video/23694777?title=0&amp;byline=0&amp;portrait=0" width="487" height="292" frameborder="0"></iframe>

My intention with Clumpers was to see what would happen when a cellular automaton was removed from a grid and give the organisms the ability to move and interact. What emergent qualities would result by combining two systems each with their own emergent qualities?

The program starts with a few hundred organisms spawning at random throughout the screen. Each individual organism then looks for the average position of all the organisms, as well as the average heading of the organisms within a smaller neighborhood. These two values are scaled and combined to a desired velocity. On top of these calculated velocities a random movement is added to maintain a variety in the movements of the organisms.

At the same time as these steering behaviors, each organism is counting the number of neighbors it has. If that number is above a 'crowded' threshold or below a 'loneliness' threshold the organism dies. Upon death the organism leaves behind a ripple and is reborn at a random location on the screen. My original intention was to have organisms born in locations based on the density of living organisms, just like a cellular automata. However, without clear boundaries between organisms it proved difficult to get a global density map for where to spawn new organisms.

Source code is available on <a href="https://github.com/stevenklise/NOC_FlockingClumps">Github</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>603</wp:post_id>
		<wp:post_date>2011-05-17 19:39:13</wp:post_date>
		<wp:post_date_gmt>2011-05-17 19:39:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clumpers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="noc"><![CDATA[Nature of Code]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[306352316]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email>socialnetworks@paulmay.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-05 01:48:00</wp:comment_date>
			<wp:comment_date_gmt>2011-09-05 01:48:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>The fluid-like behaviour of this is really interesting to watch.</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>What Is Music?</title>
		<link>http://l/~sklise/stevenklise.com/itp/what-is-music/</link>
		<pubDate>Wed, 14 Sep 2011 20:27:49 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=608</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>A response to the first chapter of <em>This Is Your Brain On Music</em> by Daniel J. Levitin.</h3>

At age 25, 10 years of which were spent learning piano and saxophone, and most of the rest listening to music I had heard many of the terms defined in the first few pages of <em>What Is Music?</em> but knew them more as vague notions and emotions than technical definitions. The most surprising bit was that pitch and loudness are wholly mental constructs. I had always thought of pitch and loudness as pitch and loudness and that is just how it is.

I had casually wondered how different instruments generated different sounds when playing identical notes. It wasn’t a matter of the frequency so what could it be? I’m trying to wrap my head around overtones. It is still unclear if overtones are a finite set of frequencies or if they exude from the fundamental tone upwards forever. Is there any reason the overtones aren’t undertones?

Shapes of graphs instantly popped in to my head while reading that varying loudnesses of overtones influence the timbre of a sound. Could it be possible to make a morphable graph to create any sound desired? Of course this is a synthesizer, but I really want to create a program that allows the user to draw the shape of the overtones and click and drag at individual points as a experimentation for the shape that sounds from instruments create.

The section describing the tonal system and fractions and differences between keys and how if a piece is written in C but the note distribution is more like A... I got lost on this. Reading about it was not very enlightening without being able to the scales out with a real instrument. So I got out a MIDI keyboard and did try to noodle about, and it's starting to make sense.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>608</wp:post_id>
		<wp:post_date>2011-09-14 20:27:49</wp:post_date>
		<wp:post_date_gmt>2011-09-14 20:27:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-is-music</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ms"><![CDATA[Musical Sequence]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[414679205]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Colombo]]></wp:comment_author>
			<wp:comment_author_email>colombo.michael@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-16 13:00:00</wp:comment_date>
			<wp:comment_date_gmt>2011-09-16 13:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>The timbre on different instruments when playing the same notes can differ not only because they excite different overtones at different intensities, but because the physical shape and composition of the instrument cause all those tones to interact with each other in various ways, causing constructive/destructive interference, wolf-tones, etc... I don't think overtones go on up to infinity, because the higher the frequency is of the overtone, the more energy is needed to cause it in the first place, but consider this: instruments DO create overtones that go beyond the frequency of human hearing (20khz) and those tones intermingle with the other tones that we CAN hear, coloring the sound even more. This is a large basis for why vinyl has it's superior/unique sound over CDs, because it keeps all those frequencies, whereas CDs cut it off at 20k as a rule...</p>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Foot Tapping</title>
		<link>http://l/~sklise/stevenklise.com/itp/foot-tapping/</link>
		<pubDate>Wed, 21 Sep 2011 22:16:24 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=613</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>A response to chapter two of <em>This Is Your Brain On Music</em> by Daniel J. Levitin.</h3>
This chapter was mostly about rhythm, though also loudness and key. It was about what makes music music aside from notes and timbre.

Much of the section on rhythm was spent identifying rhythm and explaining exactly what it is which was mostly review for me. Levitin did mention the backbeat which was characteristic to rock and roll. I would have liked to read about how different types of rhythms and meters correspond to different styles or genres of music. Sousa marches are almost always in 4/4 time as is dance music but the meter in each is different though I can't quite characterize how.

In the first Levitin said that loudness is a psychological phenomenon and not a measurable quality inherent in sound. I didn't totally buy this at first but decided that Levitin knew what he was saying. Then he elaborated on this notion saying that increases in amplitude do not linearly correlate to perceived loudness seemed an argument for loudness being a mental construction. But then there is a measurable way in which amplitude and loudness correspond. Loudness then seems to be a nitpicking way of saying that people experience sound differently. If people experience sound differently is there a way of knowing how loudness will be interpreted by most listeners and creating music and sound to cater to that audience?

Coming from mostly programming classes last semester where every word had a specific meaning and usage as well as interpretation it is a bit confusing to get in to words, definitions and subject material that is subjective. But what should I expect? Music is experiential and made for humans not for computers to understand.

It was reassuring to hear that most everyone approximates tempo and rhythm with a 4% margin of error, so I'm not entirely far off when clapping along. As well that the human ear and brain work together to quantize the notes of a piece of music. The little bit of Ableton Live that I've played around with I thought that the quantization feature was a bit of a cheat for less-than-great computer musicians but if the ear does this as well then maybe it's alright for my computer to help out my brain.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>613</wp:post_id>
		<wp:post_date>2011-09-21 22:16:24</wp:post_date>
		<wp:post_date_gmt>2011-09-21 22:16:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>foot-tapping</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ms"><![CDATA[Musical Sequence]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[421941519]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Response to &quot;The Fine Art of Repetition&quot;</title>
		<link>http://l/~sklise/stevenklise.com/itp/response-to-the-fine-art-of-repetition/</link>
		<pubDate>Wed, 28 Sep 2011 20:49:40 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=616</guid>
		<description></description>
		<content:encoded><![CDATA[The premise of this chapter seems to be that absolute music, or music without words, needs to be compared to something else—such as literature, an organism or wallpaper—in order to be taken seriously. That music must be in reference, be a metaphor to some other medium, seems to me unreasonable. Is the same demanded of the other art forms? Looking at music in terms of other media can only highlight differences, such as the existence of repetition, but not really address music as a form itself.

Kivy does allow that absolute music is art, is a great creation even though much of the essay seems intent on trivializing absolute music through forcing a comparison. If the literature and organism theories fail due to the repetition of absolute music, what of music with vocals? Are there similar theories for vocal music? If not why not? If the existence of repetition in absolute music makes creates a difficulty this same difficulty should exist in lyrical music yet this is not addressed in the essay.

The above aside, Kivy makes a good argument for the wallpaper theory. Wallpaper and Persian rugs and music share repetition and the repetition is key to the work and not simply a space filler or lack of original thought. The notion that in a repeated pattern each repetition is slightly different than the one before or after due exactly to the temporal relations is, it seems, obvious. Yet though it is obvious there is probably some value to stating and describing the phenomenon.

Towards the end of the essay Kivy says that emotion and feeling are inherent to music, are aroused in the listener by the music. This is different than <em>This Is Your Brain On Music</em> where the emotional quality of music is cultural, a theory I agree with more.

In the end, absolute music is wallpaper, but it's not boring the way that wallpaper is boring and also it contains emotion which wallpaper also lacks. Also absolute music has more than the two dimensions of wallpaper. Also it's temporal which wallpaper is not. So, music and wallpaper both have repeated patterns.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>616</wp:post_id>
		<wp:post_date>2011-09-28 20:49:40</wp:post_date>
		<wp:post_date_gmt>2011-09-28 20:49:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>response-to-the-fine-art-of-repetition</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ms"><![CDATA[Musical Sequence]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[428736624]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What Can You Do With A Piece of 8.5&quot;x11&quot; Paper?</title>
		<link>http://l/~sklise/stevenklise.com/itp/what-can-you-do-with-a-piece-of-8-5x11-paper/</link>
		<pubDate>Thu, 29 Sep 2011 15:21:40 +0000</pubDate>
		<dc:creator>sk</dc:creator>
		<guid isPermaLink="false">http://stevenklise.com/itp/?p=620</guid>
		<description></description>
		<content:encoded><![CDATA[We were asked to think about this for the past week. I decided to keep the piece of paper safe in a folder and write down all the things I could think of on my iPad. So that add's "Get supplanted by technology" to the list of things to do with a piece of paper.

<script src="https://gist.github.com/1248419.js?file=what%20to%20do%20with%20a%20piece%20of%20paper.md"></script>

I wrote this list with <a href="https://twitter.com/#!/atduskgreg">Greg Borenstein</a> and <a href="https://twitter.com/#!/qwzybug">Devin Chalmer</a>'s new iPad App <a href="http://urbanhonking.com/ideasfordozens/2011/09/28/announcing-drift/">Drift</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>620</wp:post_id>
		<wp:post_date>2011-09-29 15:21:40</wp:post_date>
		<wp:post_date_gmt>2011-09-29 15:21:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-can-you-do-with-a-piece-of-8-5x11-paper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="pi"><![CDATA[Powerful Ideas]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[429541583]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
